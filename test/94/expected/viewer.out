-- viewer.sql : test use of functions by an emaj_viewer role
--
-----------------------------
-- grant emaj_viewer role
-----------------------------
grant emaj_viewer to emaj_regression_tests_viewer_user;
-----------------------------
-- prepare groups for the test
-----------------------------
select emaj.emaj_create_group('myGroup1');
NOTICE:  table "myschema1_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS "emajC"."myschema1_myTbl3_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema1_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl4_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema1_mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl2_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema1_mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emajb.myschema1_mytbl2b_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
 emaj_create_group 
-------------------
                 7
(1 row)

select emaj.emaj_start_group('myGroup1','Start');
 emaj_start_group 
------------------
                7
(1 row)

select emaj.emaj_create_group('myGroup2');
NOTICE:  table "myschema2_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS "emajC"."myschema2_myTbl3_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema2_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema2_mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl2_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema2_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl4_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "otherPrefix4mytbl5_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj."otherPrefix4mytbl5_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl5" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl5"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl5" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl5"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  table "myschema2_mytbl6_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl6_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl6" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl6"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl6" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl6"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 75 at PERFORM
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 75 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_create_group('emptyGroup');
ERROR:  emaj_create_group: The group "emptyGroup" already exists.
select emaj.emaj_start_group('emptyGroup');
 emaj_start_group 
------------------
                0
(1 row)

--
set role emaj_regression_tests_viewer_user;
--
-----------------------------
-- authorized table or view accesses
-----------------------------
select count(*) from emaj.emaj_visible_param;
 count 
-------
     3
(1 row)

select count(*) from emaj.emaj_hist;
 count 
-------
    18
(1 row)

select count(*) from emaj.emaj_group_def;
 count 
-------
    30
(1 row)

select count(*) from emaj.emaj_group;
 count 
-------
     3
(1 row)

select count(*) from emaj.emaj_schema;
 count 
-------
     3
(1 row)

select count(*) from emaj.emaj_relation;
 count 
-------
    15
(1 row)

select count(*) from emaj.emaj_mark;
 count 
-------
     2
(1 row)

select count(*) from emaj.emaj_sequence;
 count 
-------
     7
(1 row)

select count(*) from emaj.emaj_seq_hole;
 count 
-------
     0
(1 row)

select count(*) from emaj.emaj_rlbk;
 count 
-------
    38
(1 row)

select count(*) from emaj.emaj_rlbk_session;
 count 
-------
    38
(1 row)

select count(*) from emaj.emaj_rlbk_plan;
 count 
-------
   123
(1 row)

select count(*) from emaj.emaj_rlbk_stat;
 count 
-------
     7
(1 row)

select count(*) from emaj.mySchema1_myTbl1_log;
 count 
-------
     0
(1 row)

-----------------------------
-- authorized functions
-----------------------------
select * from emaj.emaj_verify_all();
  emaj_verify_all  
-------------------
 No error detected
(1 row)

select emaj.emaj_get_previous_mark_group('myGroup1', current_timestamp);
 emaj_get_previous_mark_group 
------------------------------
 Start
(1 row)

select emaj.emaj_get_previous_mark_group('myGroup1', 'EMAJ_LAST_MARK');
 emaj_get_previous_mark_group 
------------------------------
 
(1 row)

select emaj.emaj_cleanup_rollback_state();
 emaj_cleanup_rollback_state 
-----------------------------
                           0
(1 row)

select count(*) from emaj.emaj_log_stat_group('myGroup1',NULL,NULL);
 count 
-------
     5
(1 row)

select count(*) from emaj.emaj_log_stat_groups(array['myGroup1'],NULL,NULL);
 count 
-------
     5
(1 row)

select count(*) from emaj.emaj_detailed_log_stat_group('myGroup1',NULL,NULL);
 count 
-------
     0
(1 row)

select count(*) from emaj.emaj_detailed_log_stat_groups(array['myGroup1'],NULL,NULL);
 count 
-------
     0
(1 row)

select emaj.emaj_estimate_rollback_group('myGroup1',emaj.emaj_get_previous_mark_group('myGroup1',current_timestamp),FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 0.007 secs
(1 row)

select emaj.emaj_estimate_rollback_groups(array['myGroup1'],emaj.emaj_get_previous_mark_group('myGroup1',current_timestamp),FALSE);
 emaj_estimate_rollback_groups 
-------------------------------
 @ 0.007 secs
(1 row)

select * from emaj.emaj_rollback_activity();
 rlbk_id | rlbk_groups | rlbk_mark | rlbk_mark_datetime | rlbk_is_logged | rlbk_is_alter_group_allowed | rlbk_nb_session | rlbk_nb_table | rlbk_nb_sequence | rlbk_eff_nb_table | rlbk_status | rlbk_start_datetime | rlbk_elapse | rlbk_remaining | rlbk_completion_pct 
---------+-------------+-----------+--------------------+----------------+-----------------------------+-----------------+---------------+------------------+-------------------+-------------+---------------------+-------------+----------------+---------------------
(0 rows)

select * from emaj.emaj_get_consolidable_rollbacks();
 cons_group | cons_target_rlbk_mark_name | cons_target_rlbk_mark_id | cons_end_rlbk_mark_name | cons_end_rlbk_mark_id | cons_rows | cons_marks 
------------+----------------------------+--------------------------+-------------------------+-----------------------+-----------+------------
(0 rows)

select substr(pg_size_pretty(pg_database_size(current_database())),1,0);
 substr 
--------
 
(1 row)

-----------------------------
-- forbiden table accesses
-----------------------------
select count(*) from emaj.emaj_param;
ERROR:  permission denied for relation emaj_param
delete from emaj.emaj_param;
ERROR:  permission denied for relation emaj_param
delete from emaj.emaj_hist;
ERROR:  permission denied for relation emaj_hist
delete from emaj.emaj_group_def;
ERROR:  permission denied for relation emaj_group_def
delete from emaj.emaj_group;
ERROR:  permission denied for relation emaj_group
delete from emaj.emaj_relation;
ERROR:  permission denied for relation emaj_relation
delete from emaj.emaj_mark;
ERROR:  permission denied for relation emaj_mark
delete from emaj.emaj_sequence;
ERROR:  permission denied for relation emaj_sequence
delete from emaj.emaj_seq_hole;
ERROR:  permission denied for relation emaj_seq_hole
delete from emaj.emaj_rlbk;
ERROR:  permission denied for relation emaj_rlbk
delete from emaj.emaj_rlbk_session;
ERROR:  permission denied for relation emaj_rlbk_session
delete from emaj.emaj_rlbk_plan;
ERROR:  permission denied for relation emaj_rlbk_plan
delete from emaj.emaj_rlbk_stat;
ERROR:  permission denied for relation emaj_rlbk_stat
delete from emaj.mySchema1_myTbl1_log;
ERROR:  permission denied for relation myschema1_mytbl1_log
-----------------------------
-- forbiden functions
-----------------------------
select emaj.emaj_create_group('myGroup1');
ERROR:  permission denied for function emaj_create_group
select emaj.emaj_create_group('myGroup1',true);
ERROR:  permission denied for function emaj_create_group
select emaj.emaj_drop_group('myGroup1');
ERROR:  permission denied for function emaj_drop_group
select emaj.emaj_force_drop_group('myGroup1');
ERROR:  permission denied for function emaj_force_drop_group
select emaj.emaj_alter_group('myGroup1');
ERROR:  permission denied for function emaj_alter_group
select emaj.emaj_start_group('myGroup1','mark');
ERROR:  permission denied for function emaj_start_group
select emaj.emaj_start_groups(array['myGroup1'],'mark');
ERROR:  permission denied for function emaj_start_groups
select emaj.emaj_stop_group('myGroup1');
ERROR:  permission denied for function emaj_stop_group
select emaj.emaj_stop_group('myGroup1',NULL);
ERROR:  permission denied for function emaj_stop_group
select emaj.emaj_stop_groups(array['myGroup1']);
ERROR:  permission denied for function emaj_stop_groups
select emaj.emaj_stop_groups(array['myGroup1'],NULL);
ERROR:  permission denied for function emaj_stop_groups
select emaj.emaj_protect_group('myGroup1');
ERROR:  permission denied for function emaj_protect_group
select emaj.emaj_unprotect_group('myGroup1');
ERROR:  permission denied for function emaj_unprotect_group
select emaj.emaj_set_mark_group('myGroup1','mark');
ERROR:  permission denied for function emaj_set_mark_group
select emaj.emaj_set_mark_groups(array['myGroup1'],'mark');
ERROR:  permission denied for function emaj_set_mark_groups
select emaj.emaj_comment_mark_group('myGroup1','mark',NULL);
ERROR:  permission denied for function emaj_comment_mark_group
select emaj.emaj_delete_mark_group('myGroup1','mark'); 
ERROR:  permission denied for function emaj_delete_mark_group
select emaj.emaj_delete_before_mark_group('myGroup1','mark');
ERROR:  permission denied for function emaj_delete_before_mark_group
select emaj.emaj_rename_mark_group('myGroup1','EMAJ_LAST_MARK','mark');
ERROR:  permission denied for function emaj_rename_mark_group
select emaj.emaj_protect_mark_group('myGroup1','EMAJ_LAST_MARK');
ERROR:  permission denied for function emaj_protect_mark_group
select emaj.emaj_unprotect_mark_group('myGroup1','EMAJ_LAST_MARK');
ERROR:  permission denied for function emaj_unprotect_mark_group
select emaj.emaj_rollback_group('myGroup1','mark'); 
ERROR:  permission denied for function emaj_rollback_group
select emaj.emaj_rollback_groups(array['myGroup1'],'mark'); 
ERROR:  permission denied for function emaj_rollback_groups
select emaj.emaj_logged_rollback_group('myGroup1','mark');
ERROR:  permission denied for function emaj_logged_rollback_group
select emaj.emaj_logged_rollback_groups(array['myGroup1'],'mark');
ERROR:  permission denied for function emaj_logged_rollback_groups
select emaj.emaj_consolidate_rollback_group('myGroup1','mark');
ERROR:  permission denied for function emaj_consolidate_rollback_group
select emaj.emaj_reset_group('myGroup1');
ERROR:  permission denied for function emaj_reset_group
select emaj.emaj_snap_group('myGroup1','/tmp',NULL);
ERROR:  permission denied for function emaj_snap_group
select emaj.emaj_snap_log_group('myGroup1',NULL,NULL,'/tmp',NULL);
ERROR:  permission denied for function emaj_snap_log_group
select emaj.emaj_gen_sql_group('myGroup1',NULL,NULL,'/tmp/dummy');
ERROR:  permission denied for function emaj_gen_sql_group
select emaj.emaj_gen_sql_group('myGroup1',NULL,NULL,'/tmp/dummy',array['']);
ERROR:  permission denied for function emaj_gen_sql_group
select emaj.emaj_gen_sql_groups(array['myGroup1'],NULL,NULL,'/tmp/dummy');
ERROR:  permission denied for function emaj_gen_sql_groups
select emaj.emaj_gen_sql_groups(array['myGroup1'],NULL,NULL,'/tmp/dummy',array['']);
ERROR:  permission denied for function emaj_gen_sql_groups
--
reset role;
