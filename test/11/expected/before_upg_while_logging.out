-- before_upg_while_logging.sql : complex scenario executed by an emaj_adm role
-- The E-Maj version is changed while groups are in logging state
-- This script is the part of operations performed before the upgrade
--
SET datestyle TO ymd;
-----------------------------
-- grant emaj_adm role 
-----------------------------
grant emaj_adm to emaj_regression_tests_adm_user1, emaj_regression_tests_adm_user2;
set role emaj_regression_tests_adm_user1;
-----------------------------
-- create groups
-----------------------------
select emaj.emaj_create_group('myGroup1');
ERROR:  emaj_create_group: The group "myGroup1" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 29 at RAISE
select emaj.emaj_create_group('myGroup2',true);
ERROR:  emaj_create_group: The group "myGroup2" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 29 at RAISE
select emaj.emaj_create_group('phil''s group#3",',false);
ERROR:  emaj_create_group: The group "phil's group#3"," is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 29 at RAISE
select emaj.emaj_create_group('myGroup6');
ERROR:  emaj_create_group: The group "myGroup6" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 29 at RAISE
-----------------------------
-- prepare groups
-----------------------------
select emaj.emaj_assign_tables('myschema1','.*',NULL,'myGroup1');
ERROR:  function emaj.emaj_assign_tables(unknown, unknown, unknown, unknown) does not exist
LINE 1: select emaj.emaj_assign_tables('myschema1','.*',NULL,'myGrou...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_modify_table('myschema1','mytbl1','{"priority":20}'::jsonb);
ERROR:  function emaj.emaj_modify_table(unknown, unknown, jsonb) does not exist
LINE 1: select emaj.emaj_modify_table('myschema1','mytbl1','{"priori...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_modify_table('myschema1','myTbl3','{"priority":10}'::jsonb);
ERROR:  function emaj.emaj_modify_table(unknown, unknown, jsonb) does not exist
LINE 1: select emaj.emaj_modify_table('myschema1','myTbl3','{"priori...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_modify_table('myschema1','mytbl4','{"priority":20}'::jsonb);
ERROR:  function emaj.emaj_modify_table(unknown, unknown, jsonb) does not exist
LINE 1: select emaj.emaj_modify_table('myschema1','mytbl4','{"priori...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_assign_sequence('myschema1','myTbl3_col31_seq','myGroup1');
ERROR:  function emaj.emaj_assign_sequence(unknown, unknown, unknown) does not exist
LINE 1: select emaj.emaj_assign_sequence('myschema1','myTbl3_col31_s...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_assign_tables('myschema2','{"mytbl1", "mytbl2", "myTbl3", "mytbl4"}','myGroup2');
ERROR:  function emaj.emaj_assign_tables(unknown, unknown, unknown) does not exist
LINE 1: select emaj.emaj_assign_tables('myschema2','{"mytbl1", "mytb...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_assign_sequences('myschema2','{"myTbl3_col31_seq","myseq1"}','myGroup2');
ERROR:  function emaj.emaj_assign_sequences(unknown, unknown, unknown) does not exist
LINE 1: select emaj.emaj_assign_sequences('myschema2','{"myTbl3_col3...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- The third group name contains space, comma # and '
select emaj.emaj_assign_tables('phil''s schema3','.*','mytbl4','phil''s group#3",');
ERROR:  function emaj.emaj_assign_tables(unknown, unknown, unknown, unknown) does not exist
LINE 1: select emaj.emaj_assign_tables('phil''s schema3','.*','mytbl...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_assign_sequence('phil''s schema3',E'phil''s seq\\1','phil''s group#3",');
ERROR:  function emaj.emaj_assign_sequence(unknown, unknown, unknown) does not exist
LINE 1: select emaj.emaj_assign_sequence('phil''s schema3',E'phil''s...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Group with long name tables
select emaj.emaj_assign_tables('myschema6','.*',NULL,'myGroup6');
ERROR:  function emaj.emaj_assign_tables(unknown, unknown, unknown, unknown) does not exist
LINE 1: select emaj.emaj_assign_tables('myschema6','.*',NULL,'myGrou...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-----------------------------
-- set the default_tablespace parameter to tspemaj to log tables and indexes into this tablespace
-----------------------------
SET default_tablespace TO tspemaj;
-----------------------------
-- start groups in a single transaction
-----------------------------
begin;
  select emaj.emaj_start_groups('{"myGroup1","myGroup2"}','M1');
ERROR:  _check_group_names: The groups "myGroup1, myGroup2" do not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 38 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 19 at SQL statement
PL/pgSQL function emaj.emaj_start_groups(text[],text,boolean) line 11 at RETURN
  select emaj.emaj_start_group('phil''s group#3",','M1');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
commit;
-----------------------------
-- Step 1 : for myGroup1, update tables, set 2 marks, perform 2 unlogged rollbacks and protect the group and its last mark
-----------------------------
-- 
set search_path=myschema1;
insert into myTbl1 select i, 'ABC', E'\\014'::bytea from generate_series (1,11) as i;
update myTbl1 set col13=E'\\034'::bytea where col11 <= 3;
insert into myTbl2 values (1,'ABC','2010-12-31');
delete from myTbl1 where col11 > 10;
insert into myTbl2 values (2,'DEF',NULL);
insert into "myTbl3" (col33) select generate_series(1000,1039,4)/100;
--
select emaj.emaj_set_mark_group('myGroup1','M2');
ERROR:  _check_group_names: The group "myGroup1" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'LOGGING')"
PL/pgSQL function emaj.emaj_set_mark_group(text,text) line 15 at PERFORM
--
insert into myTbl4 values (1,'FK...',1,1,'ABC');
insert into myTbl4 values (2,'FK...',1,1,'ABC');
update myTbl4 set col43 = 2;
insert into myTbl4 values (3,'FK...',1,10,'ABC');
delete from myTbl1 where col11 = 10;
update myTbl1 set col12='DEF' where col11 <= 2;
--
select emaj.emaj_set_mark_group('myGroup1','M3');
ERROR:  _check_group_names: The group "myGroup1" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'LOGGING')"
PL/pgSQL function emaj.emaj_set_mark_group(text,text) line 15 at PERFORM
select emaj.emaj_comment_mark_group('myGroup1','M3','Third mark set');
ERROR:  _check_group_names: The group "myGroup1" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_comment_mark_group(text,text,text) line 8 at PERFORM
--
delete from myTbl1 where col11 > 3;
select * from emaj.emaj_rollback_group('myGroup1','M3');
ERROR:  _check_group_names: The group "myGroup1" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 14 at SQL statement
SQL statement "SELECT rlbk_message::INT FROM emaj._rlbk_groups(array[v_groupName], v_mark, FALSE, FALSE, NULL) WHERE rlbk_severity = 'Notice'"
PL/pgSQL function emaj.emaj_rollback_group(text,text) line 7 at RETURN
insert into myTbl2 values (3,'GHI',NULL);
update myTbl4 set col43 = 3 where col41 = 2;
select * from emaj.emaj_rollback_group('myGroup1','M3');
ERROR:  _check_group_names: The group "myGroup1" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 14 at SQL statement
SQL statement "SELECT rlbk_message::INT FROM emaj._rlbk_groups(array[v_groupName], v_mark, FALSE, FALSE, NULL) WHERE rlbk_severity = 'Notice'"
PL/pgSQL function emaj.emaj_rollback_group(text,text) line 7 at RETURN
--
select emaj.emaj_protect_mark_group('myGroup1','M3');
ERROR:  _check_group_names: The group "myGroup1" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'ROLLBACKABLE')"
PL/pgSQL function emaj.emaj_protect_mark_group(text,text) line 11 at PERFORM
select emaj.emaj_protect_group('myGroup1');
ERROR:  _check_group_names: The group "myGroup1" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'LOGGING,ROLLBACKABLE')"
PL/pgSQL function emaj.emaj_protect_group(text) line 10 at PERFORM
-----------------------------
-- Step 2 : for myGroup2, start, update tables and set 2 marks 
-----------------------------
set search_path=myschema2;
insert into myTbl1 select i, 'ABC', E'\\014'::bytea from generate_series (1,11) as i;
update myTbl1 set col13=E'\\034'::bytea where col11 <= 3;
insert into myTbl2 values (1,'ABC','2010-01-01');
delete from myTbl1 where col11 > 10;
select nextval('myschema2.myseq1');
 nextval 
---------
    1000
(1 row)

insert into myTbl2 values (2,'DEF',NULL);
insert into "myTbl3" (col33) select generate_series(1000,1039,4)/100;
--
select emaj.emaj_set_mark_group('myGroup2','M2');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'LOGGING')"
PL/pgSQL function emaj.emaj_set_mark_group(text,text) line 15 at PERFORM
--
set search_path=myschema2;
select nextval('myschema2.myseq1');
 nextval 
---------
    1001
(1 row)

select nextval('myschema2.myseq1');
 nextval 
---------
    1002
(1 row)

select nextval('myschema2.myseq1');
 nextval 
---------
    1003
(1 row)

--
reset role;
alter sequence mySeq1 NO MAXVALUE NO CYCLE;
set role emaj_regression_tests_adm_user1;
--
insert into myTbl4 values (1,'FK...',1,1,'ABC');
insert into myTbl4 values (2,'FK...',1,1,'ABC');
update myTbl4 set col43 = 2;
--
select emaj.emaj_set_mark_group('myGroup2','M3');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'LOGGING')"
PL/pgSQL function emaj.emaj_set_mark_group(text,text) line 15 at PERFORM
-----------------------------
-- Step 3 : for myGroup2, double logged rollback
-----------------------------
select * from emaj.emaj_logged_rollback_group('myGroup2','M2');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 14 at SQL statement
SQL statement "SELECT rlbk_message::INT FROM emaj._rlbk_groups(array[v_groupName], v_mark, TRUE, FALSE, NULL) WHERE rlbk_severity = 'Notice'"
PL/pgSQL function emaj.emaj_logged_rollback_group(text,text) line 11 at RETURN
select * from emaj.emaj_logged_rollback_group('myGroup2','M3');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 14 at SQL statement
SQL statement "SELECT rlbk_message::INT FROM emaj._rlbk_groups(array[v_groupName], v_mark, TRUE, FALSE, NULL) WHERE rlbk_severity = 'Notice'"
PL/pgSQL function emaj.emaj_logged_rollback_group(text,text) line 11 at RETURN
-----------------------------
-- Step 4 : for both myGroup1 and myGroup2, set a common mark
-----------------------------
select emaj.emaj_set_mark_groups('{"myGroup1","myGroup2"}','Common');
ERROR:  _check_group_names: The groups "myGroup1, myGroup2" do not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 38 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := TRUE, v_lockGroups := TRUE, v_checkList := 'LOGGING')"
PL/pgSQL function emaj.emaj_set_mark_groups(text[],text) line 15 at SQL statement
-----------------------------
-- Step 5 : alter group myGroup1 by removing a table
-----------------------------
select emaj.emaj_remove_table('myschema1', 'myTbl3');
ERROR:  function emaj.emaj_remove_table(unknown, unknown) does not exist
LINE 1: select emaj.emaj_remove_table('myschema1', 'myTbl3');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-----------------------------
-- Step 6 : managing a group with long name tables
-----------------------------
select emaj.emaj_start_group('myGroup6', 'Start G6');
ERROR:  _check_group_names: The group "myGroup6" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 19 at SQL statement
PL/pgSQL function emaj.emaj_start_group(text,text,boolean) line 12 at RETURN
select emaj.emaj_remove_table('myschema6', 'table_with_55_characters_long_name_____0_________0abcde');
ERROR:  function emaj.emaj_remove_table(unknown, unknown) does not exist
LINE 1: select emaj.emaj_remove_table('myschema6', 'table_with_55_ch...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select emaj.emaj_stop_group('myGroup6');
ERROR:  _check_group_names: The group "myGroup6" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._stop_groups(text[],text,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_stop_group(text,text) line 10 at RETURN
-----------------------------
-- Checking steps 1 to 6
-----------------------------
-- emaj tables
select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
(0 rows)

select group_name, group_is_rollbackable, group_last_alter_time_id, group_is_logging, 
       group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_comment
  from emaj.emaj_group order by group_name;
 group_name | group_is_rollbackable | group_last_alter_time_id | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_comment 
------------+-----------------------+--------------------------+------------------+-------------------------+----------------+-------------------+---------------
(0 rows)

-- Uncomment the next statement when the previous version will be >= 4.4.0
--select * from emaj.emaj_group_hist order by grph_group, grph_time_range;
select mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'), mark_time_id, 
       mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark 
  from emaj.emaj_mark order by mark_time_id, mark_group;
 mark_group | regexp_replace | mark_time_id | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
------------+----------------+--------------+------------------------+--------------+---------------------------+------------------------------
(0 rows)

select sequ_schema, sequ_name, sequ_time_id, sequ_last_val, sequ_is_called
  from emaj.emaj_sequence order by sequ_time_id, sequ_schema, sequ_name;
 sequ_schema | sequ_name | sequ_time_id | sequ_last_val | sequ_is_called 
-------------+-----------+--------------+---------------+----------------
(0 rows)

select tbl_schema, tbl_name, tbl_time_id, tbl_tuples, tbl_pages, tbl_log_seq_last_val
  from emaj.emaj_table order by tbl_time_id, tbl_schema, tbl_name;
ERROR:  relation "emaj.emaj_table" does not exist
LINE 2:   from emaj.emaj_table order by tbl_time_id, tbl_schema, tbl...
               ^
select sqhl_schema, sqhl_table, sqhl_begin_time_id, sqhl_end_time_id, sqhl_hole_size
  from emaj.emaj_seq_hole order by 1,2,3;
 sqhl_schema | sqhl_table | sqhl_begin_time_id | sqhl_end_time_id | sqhl_hole_size 
-------------+------------+--------------------+------------------+----------------
(0 rows)

select * from emaj.emaj_relation_change order by 1,2,3,4,5;
ERROR:  relation "emaj.emaj_relation_change" does not exist
LINE 1: select * from emaj.emaj_relation_change order by 1,2,3,4,5;
                      ^
-- log tables
select col11, col12, col13, emaj_verb, emaj_tuple, emaj_gid from emaj_mySchema1.myTbl1_log order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema1.mytbl1_log" does not exist
LINE 1: ...ol12, col13, emaj_verb, emaj_tuple, emaj_gid from emaj_mySch...
                                                             ^
select col21, col22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj_mySchema1.myTbl2_log order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema1.mytbl2_log" does not exist
LINE 1: ...ol22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj_mySch...
                                                             ^
select col20, col21, col22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj_mySchema1.myTbl2b_log order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema1.mytbl2b_log" does not exist
LINE 1: ...ol22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj_mySch...
                                                             ^
select col31, col33, emaj_verb, emaj_tuple, emaj_gid from emaj_myschema1."myTbl3_log_1" order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema1.myTbl3_log_1" does not exist
LINE 1: ...ol31, col33, emaj_verb, emaj_tuple, emaj_gid from emaj_mysch...
                                                             ^
select col41, col42, col43, col44, col45, emaj_verb, emaj_tuple, emaj_gid from emaj_mySchema1.myTbl4_log order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema1.mytbl4_log" does not exist
LINE 1: ...ol44, col45, emaj_verb, emaj_tuple, emaj_gid from emaj_mySch...
                                                             ^
--
select col11, col12, col13, emaj_verb, emaj_tuple, emaj_gid from emaj_mySchema2.myTbl1_log order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema2.mytbl1_log" does not exist
LINE 1: ...ol12, col13, emaj_verb, emaj_tuple, emaj_gid from emaj_mySch...
                                                             ^
select col21, col22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj_mySchema2.myTbl2_log order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema2.mytbl2_log" does not exist
LINE 1: ...ol22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj_mySch...
                                                             ^
select col31, col33, emaj_verb, emaj_tuple, emaj_gid from emaj_myschema2."myTbl3_log" order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema2.myTbl3_log" does not exist
LINE 1: ...ol31, col33, emaj_verb, emaj_tuple, emaj_gid from emaj_mysch...
                                                             ^
select col41, col42, col43, col44, col45, emaj_verb, emaj_tuple, emaj_gid from emaj_mySchema2.myTbl4_log order by emaj_gid, emaj_tuple desc;
ERROR:  relation "emaj_myschema2.mytbl4_log" does not exist
LINE 1: ...ol44, col45, emaj_verb, emaj_tuple, emaj_gid from emaj_mySch...
                                                             ^
-------------------------------
-- Specific tests for this upgrade
-------------------------------
reset role;
create extension adminpack;
