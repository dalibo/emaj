-- create_drop.sql : prepare groups content and test emaj_create_group(), emaj_comment_group() 
-- emaj_drop_group() and emaj_force_drop_group() functions
--
SET client_min_messages TO WARNING;
-----------------------------
-- prepare groups
-----------------------------
delete from emaj.emaj_group_def;
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2',NULL,NULL,NULL,'tsplog1','tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C',NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,NULL,NULL,'tsplog1','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b_col20_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3_col31_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3',NULL,'C');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4',NULL,NULL,'myschema2_mytbl4');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl5',NULL,NULL,'otherPrefix4mytbl5');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl6');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
-- The third group name contains space, comma # and '
-- (note myTbl4 from "phil's schema3" remains outside phil's group#3", group)
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3','phil''s tbl1',NULL,' #''3');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\_col21_seq');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'phil''s seq\\1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblm');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblc1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblc2');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mypartp1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mypartp2');
insert into emaj.emaj_group_def values ('dummyGrp1','dummySchema','mytbl4');
insert into emaj.emaj_group_def values ('dummyGrp1','myschema1','dummyTable');
insert into emaj.emaj_group_def values ('dummyGrp2','emaj','emaj_param');
insert into emaj.emaj_group_def values ('dummyGrp2','emajC','myschema1_myTbl3_log');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema1','mytbl1');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema2','mytbl2');
-----------------------------
-- emaj_create_group() tests
-----------------------------
-- invalid group names
select emaj.emaj_create_group(NULL);
ERROR:  emaj_create_group: The group name can't be NULL or empty.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 19 at RAISE
select emaj.emaj_create_group('',false);
ERROR:  emaj_create_group: The group name can't be NULL or empty.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 19 at RAISE
-- group is unknown in emaj_group_def
select emaj.emaj_create_group('unknownGroup');
ERROR:  emaj_create_group: The group "unknownGroup" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 29 at RAISE
select emaj.emaj_create_group('unknownGroup',false);
ERROR:  emaj_create_group: The group "unknownGroup" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 29 at RAISE
-- an emtpy group to create is known in emaj_group_def
select emaj.emaj_create_group('myGroup1',true,true);
ERROR:  emaj_create_group: The group "myGroup1" is referenced into the emaj_group_def table. This is not consistent with the <is_empty> parameter set to true.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 32 at RAISE
-- unknown schema or table in emaj_group_def
select emaj.emaj_create_group('dummyGrp1');
WARNING:  _check_groups_content: Error, the table or sequence "dummySchema".mytbl4 does not exist.
WARNING:  _check_groups_content: Error, the table or sequence myschema1."dummyTable" does not exist.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
-- group with a partitionned table (in PG 10+) (abort for lack of PRIMARY KEY with prior PG versions)
begin;
  insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblp');
  select emaj.emaj_create_group('myGroup4');
WARNING:  _check_groups_content: Error, the table myschema4.mytblp has no PRIMARY KEY.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- group with a temp table
begin;
  CREATE TEMPORARY TABLE myTempTbl (
    col1       INT     NOT NULL,
    PRIMARY KEY (col1)
  );
  insert into emaj.emaj_group_def 
    select 'myGroup5',nspname,'mytemptbl' from pg_class, pg_namespace
      where relnamespace = pg_namespace.oid and relname = 'mytemptbl';
  select emaj.emaj_create_group('myGroup5');
WARNING:  _check_groups_content: Error, the table pg_temp_2.mytemptbl is a TEMPORARY table.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- group with an unlogged table
begin;
  insert into emaj.emaj_group_def values ('myGroup5','myschema5','myunloggedtbl');
  select emaj.emaj_create_group('myGroup5');
WARNING:  _check_groups_content: Error, the table myschema5.myunloggedtbl is an UNLOGGED table.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- group with a WITH OIDS table
begin;
  insert into emaj.emaj_group_def values ('myGroup5','myschema5','myoidstbl');
  select emaj.emaj_create_group('myGroup5');
WARNING:  _check_groups_content: Error, the table myschema5.myoidstbl is declared WITH OIDS.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- table without pkey for a rollbackable group
select emaj.emaj_create_group('phil''s group#3",',true);
WARNING:  _check_groups_content: Error, the table "phil's schema3"."myTbl2\" has no PRIMARY KEY.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
-- sequence with a log schema suffix defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- sequence with an emaj names prefix defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the emaj names prefix is not NULL.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- sequence with tablespaces defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'something', grpdef_log_idx_tsp = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the index log tablespace is not NULL.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- table with invalid tablespace
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'dummyTablespace' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  select emaj.emaj_create_group('myGroup1');
ERROR:  tablespace "dummyTablespace" does not exist
CONTEXT:  SQL statement "CREATE TABLE emaj.myschema1_mytbl1_log (LIKE myschema1.mytbl1) TABLESPACE "dummyTablespace""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 67 at EXECUTE
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 55 at PERFORM
rollback;
-- already existing secondary schema
begin;
  create schema emajb;
  select emaj.emaj_create_group('myGroup1');
ERROR:  _create_log_schemas: The schema "emajb" should not exist. Drop it manually, or modify emaj_group_def table's content.
CONTEXT:  PL/pgSQL function emaj._create_log_schemas(text,text[]) line 21 at RAISE
SQL statement "SELECT emaj._create_log_schemas('CREATE_GROUP', ARRAY[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 44 at PERFORM
rollback;
-- conflict on emaj names prefix inside the group to create
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'myschema1_mytbl4' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, the emaj prefix "myschema1_mytbl4" is configured for several tables in the groups.
WARNING:  _check_groups_content: Error, the emaj prefix "samePrefix" is configured for several tables in the groups.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- conflict on emaj names prefix with already create groups
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
 emaj_create_group 
-------------------
                 7
(1 row)

  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup2' and grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl1';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'myschema1_mytbl2' where grpdef_group = 'myGroup2' and grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl2';
  select emaj.emaj_create_group('myGroup2');
WARNING:  _check_groups_content: Error, the emaj prefix "myschema1_mytbl2" is already used.
WARNING:  _check_groups_content: Error, the emaj prefix "samePrefix" is already used.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- mix a lot of errors
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'something', grpdef_emaj_names_prefix = 'something', grpdef_log_dat_tsp = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2';
  alter table myschema1.mytbl1 set with oids;
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, the emaj prefix "samePrefix" is configured for several tables in the groups.
WARNING:  _check_groups_content: Error, the table myschema1.mytbl1 is declared WITH OIDS.
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the emaj names prefix is not NULL.
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
rollback;
-- should be OK
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
 emaj_create_group 
-------------------
                 7
(1 row)

-- explicitely create an empty group (here audit_only)
select emaj.emaj_create_group('emptyGroup',false,true);
 emaj_create_group 
-------------------
                 0
(1 row)

-- should be OK, but with a warning for linked table not protected by E-Maj
alter table myschema2.myTbl6 add foreign key (col61) references myschema2.myTbl7 (col71) deferrable initially immediate;
alter table myschema2.myTbl8 add foreign key (col81) references myschema2.myTbl6 (col61) deferrable;
select emaj.emaj_create_group('myGroup2',true);
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
 emaj_create_group 
-------------------
                 8
(1 row)

-- should be OK, but with a warning for linked table belonging to another group
begin;
  update emaj.emaj_group_def set grpdef_group = 'dummyGrp3' 
    where grpdef_schema = 'phil''s schema3' and grpdef_tblseq = E'myTbl2\\';
  select emaj.emaj_create_group('phil''s group#3",',false);
WARNING:  _create_seq: The sequence phil's schema3.myTbl2\_col21_seq is linked to table phil's schema3.myTbl2\ but this table belong to another tables group (dummyGrp3).
 emaj_create_group 
-------------------
                 3
(1 row)

rollback;
-- should be OK, but with a warning for linked table not belonging to any group
begin;
  delete from emaj.emaj_group_def
    where grpdef_schema = 'phil''s schema3' and grpdef_tblseq = E'myTbl2\\';
  select emaj.emaj_create_group('phil''s group#3",',false);
WARNING:  _create_seq: The sequence phil's schema3.myTbl2\_col21_seq is linked to table phil's schema3.myTbl2\ but this table does not belong to any tables group.
 emaj_create_group 
-------------------
                 3
(1 row)

rollback;
-- should be OK
select emaj.emaj_create_group('phil''s group#3",',false);
 emaj_create_group 
-------------------
                 4
(1 row)

select emaj.emaj_create_group('myGroup4');
WARNING:  _create_tbl: The table "myschema4.mytblm" has triggers (mytblm_insert_trigger). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
 emaj_create_group 
-------------------
                 5
(1 row)

-- create a group with a table from an E-Maj secondary schema
select emaj.emaj_create_group('dummyGrp2',false);
WARNING:  _check_groups_content: Error, the table or sequence emaj.emaj_param belongs to an E-Maj schema.
WARNING:  _check_groups_content: Error, the table or sequence "emajC"."myschema1_myTbl3_log" belongs to an E-Maj schema.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
-- create a group with a table already belonging to another group
select emaj.emaj_create_group('dummyGrp3');
WARNING:  _check_groups_content: Error, the table or sequence myschema1.mytbl1 belongs to another group (myGroup1).
WARNING:  _check_groups_content: Error, the table or sequence myschema2.mytbl2 belongs to another group (myGroup2).
WARNING:  _check_groups_content: Error, the emaj prefix "myschema1_mytbl1" is already used.
WARNING:  _check_groups_content: Error, the emaj prefix "myschema2_mytbl2" is already used.
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._check_groups_content(text[],boolean) line 187 at RAISE
SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 35 at PERFORM
-- already created
select emaj.emaj_create_group('myGroup2');
ERROR:  emaj_create_group: The group "myGroup2" already exists.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 24 at RAISE
-- impact of created groups
select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable, 
       group_creation_time_id, group_last_alter_time_id, group_comment
 from emaj.emaj_group order by group_name;
    group_name    | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 emptyGroup       | f                | t                       |              0 |                 0 | f                     |                      5 |                          | 
 myGroup1         | f                | f                       |              5 |                 2 | t                     |                      4 |                          | 
 myGroup2         | f                | f                       |              6 |                 2 | t                     |                      6 |                          | 
 myGroup4         | f                | f                       |              5 |                 0 | t                     |                     10 |                          | 
 phil's group#3", | f                | t                       |              2 |                 2 | f                     |                      9 |                          | 
(5 rows)

select * from emaj.emaj_relation order by rel_group, rel_priority, rel_schema, rel_tblseq, rel_time_range;
   rel_schema   |    rel_tblseq     | rel_time_range |    rel_group     | rel_kind | rel_priority | rel_log_schema |         rel_log_table          | rel_log_dat_tsp |           rel_log_index            | rel_log_idx_tsp |          rel_log_sequence          |          rel_log_function           |                       rel_sql_columns                       |      rel_sql_pk_columns       |                               rel_sql_pk_eq_conditions                                | rel_log_seq_last_value 
----------------+-------------------+----------------+------------------+----------+--------------+----------------+--------------------------------+-----------------+------------------------------------+-----------------+------------------------------------+-------------------------------------+-------------------------------------------------------------+-------------------------------+---------------------------------------------------------------------------------------+------------------------
 myschema1      | myTbl3_col31_seq  | [4,)           | myGroup1         | S        |            1 |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               |                                                                                       |                       
 myschema1      | myTbl3            | [4,)           | myGroup1         | r        |           10 | emajC          | myschema1_myTbl3_log           | tsplog1         | myschema1_myTbl3_log_idx           |                 | myschema1_myTbl3_log_seq           | myschema1_myTbl3_log_fnct           | tbl.col31,tbl.col32,tbl.col33                               | col31                         | tbl.col31 = keys.col31                                                                |                       
 myschema1      | mytbl1            | [4,)           | myGroup1         | r        |           20 | emaj           | myschema1_mytbl1_log           |                 | myschema1_mytbl1_log_idx           |                 | myschema1_mytbl1_log_seq           | myschema1_mytbl1_log_fnct           | tbl.col11,tbl.col12,tbl.col13                               | col11,col12                   | tbl.col11 = keys.col11 AND tbl.col12 = keys.col12                                     |                       
 myschema1      | mytbl4            | [4,)           | myGroup1         | r        |           20 | emaj           | myschema1_mytbl4_log           | tsplog1         | myschema1_mytbl4_log_idx           | tsp log'2       | myschema1_mytbl4_log_seq           | myschema1_mytbl4_log_fnct           | tbl.col41,tbl.col42,tbl.col43,tbl.col44,tbl.col45           | col41                         | tbl.col41 = keys.col41                                                                |                       
 myschema1      | mytbl2            | [4,)           | myGroup1         | r        |              | emaj           | myschema1_mytbl2_log           | tsplog1         | myschema1_mytbl2_log_idx           | tsplog1         | myschema1_mytbl2_log_seq           | myschema1_mytbl2_log_fnct           | tbl.col21,tbl.col22,tbl.col23                               | col21                         | tbl.col21 = keys.col21                                                                |                       
 myschema1      | mytbl2b           | [4,)           | myGroup1         | r        |              | emajb          | myschema1_mytbl2b_log          | tsp log'2       | myschema1_mytbl2b_log_idx          | tsp log'2       | myschema1_mytbl2b_log_seq          | myschema1_mytbl2b_log_fnct          | tbl.col20,tbl.col21                                         | col20                         | tbl.col20 = keys.col20                                                                |                       
 myschema1      | mytbl2b_col20_seq | [4,)           | myGroup1         | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               |                                                                                       |                       
 myschema2      | myTbl3            | [6,)           | myGroup2         | r        |              | emajC          | myschema2_myTbl3_log           |                 | myschema2_myTbl3_log_idx           |                 | myschema2_myTbl3_log_seq           | myschema2_myTbl3_log_fnct           | tbl.col31,tbl.col32,tbl.col33                               | col31                         | tbl.col31 = keys.col31                                                                |                       
 myschema2      | myTbl3_col31_seq  | [6,)           | myGroup2         | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               |                                                                                       |                       
 myschema2      | myseq1            | [6,)           | myGroup2         | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               |                                                                                       |                       
 myschema2      | mytbl1            | [6,)           | myGroup2         | r        |              | emaj           | myschema2_mytbl1_log           |                 | myschema2_mytbl1_log_idx           |                 | myschema2_mytbl1_log_seq           | myschema2_mytbl1_log_fnct           | tbl.col11,tbl.col12,tbl.col13                               | col11,col12                   | tbl.col11 = keys.col11 AND tbl.col12 = keys.col12                                     |                       
 myschema2      | mytbl2            | [6,)           | myGroup2         | r        |              | emaj           | myschema2_mytbl2_log           |                 | myschema2_mytbl2_log_idx           |                 | myschema2_mytbl2_log_seq           | myschema2_mytbl2_log_fnct           | tbl.col21,tbl.col22,tbl.col23                               | col21                         | tbl.col21 = keys.col21                                                                |                       
 myschema2      | mytbl4            | [6,)           | myGroup2         | r        |              | emaj           | myschema2_mytbl4_log           |                 | myschema2_mytbl4_log_idx           |                 | myschema2_mytbl4_log_seq           | myschema2_mytbl4_log_fnct           | tbl.col41,tbl.col42,tbl.col43,tbl.col44,tbl.col45           | col41                         | tbl.col41 = keys.col41                                                                |                       
 myschema2      | mytbl5            | [6,)           | myGroup2         | r        |              | emaj           | otherPrefix4mytbl5_log         |                 | otherPrefix4mytbl5_log_idx         |                 | otherPrefix4mytbl5_log_seq         | otherPrefix4mytbl5_log_fnct         | tbl.col51,tbl.col52,tbl.col53,tbl.col54,tbl.col55           | col51                         | tbl.col51 = keys.col51                                                                |                       
 myschema2      | mytbl6            | [6,)           | myGroup2         | r        |              | emaj           | myschema2_mytbl6_log           |                 | myschema2_mytbl6_log_idx           |                 | myschema2_mytbl6_log_seq           | myschema2_mytbl6_log_fnct           | tbl.col61,tbl.col62,tbl.col63,tbl.col64,tbl.col65,tbl.col66 | col61                         | tbl.col61 = keys.col61                                                                |                       
 myschema4      | mypartp1          | [10,)          | myGroup4         | r        |              | emaj           | myschema4_mypartp1_log         |                 | myschema4_mypartp1_log_idx         |                 | myschema4_mypartp1_log_seq         | myschema4_mypartp1_log_fnct         | tbl.col1,tbl.col2,tbl.col3                                  | col1                          | tbl.col1 = keys.col1                                                                  |                       
 myschema4      | mypartp2          | [10,)          | myGroup4         | r        |              | emaj           | myschema4_mypartp2_log         |                 | myschema4_mypartp2_log_idx         |                 | myschema4_mypartp2_log_seq         | myschema4_mypartp2_log_fnct         | tbl.col1,tbl.col2,tbl.col3                                  | col1                          | tbl.col1 = keys.col1                                                                  |                       
 myschema4      | mytblc1           | [10,)          | myGroup4         | r        |              | emaj           | myschema4_mytblc1_log          |                 | myschema4_mytblc1_log_idx          |                 | myschema4_mytblc1_log_seq          | myschema4_mytblc1_log_fnct          | tbl.col1,tbl.col2,tbl.col3                                  | col1,col2                     | tbl.col1 = keys.col1 AND tbl.col2 = keys.col2                                         |                       
 myschema4      | mytblc2           | [10,)          | myGroup4         | r        |              | emaj           | myschema4_mytblc2_log          |                 | myschema4_mytblc2_log_idx          |                 | myschema4_mytblc2_log_seq          | myschema4_mytblc2_log_fnct          | tbl.col1,tbl.col2,tbl.col3                                  | col1,col2                     | tbl.col1 = keys.col1 AND tbl.col2 = keys.col2                                         |                       
 myschema4      | mytblm            | [10,)          | myGroup4         | r        |              | emaj           | myschema4_mytblm_log           |                 | myschema4_mytblm_log_idx           |                 | myschema4_mytblm_log_seq           | myschema4_mytblm_log_fnct           | tbl.col1,tbl.col2,tbl.col3                                  | col1                          | tbl.col1 = keys.col1                                                                  |                       
 phil's schema3 | myTbl2\           | [9,)           | phil's group#3", | r        |              | emaj           | phil's schema3_myTbl2\_log     |                 | phil's schema3_myTbl2\_log_idx     |                 | phil's schema3_myTbl2\_log_seq     | phil's schema3_myTbl2\_log_fnct     | tbl.col21,tbl.col22,tbl.col23                               |                               |                                                                                       |                       
 phil's schema3 | myTbl2\_col21_seq | [9,)           | phil's group#3", | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               |                                                                                       |                       
 phil's schema3 | phil's seq\1      | [9,)           | phil's group#3", | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               |                                                                                       |                       
 phil's schema3 | phil's tbl1       | [9,)           | phil's group#3", | r        |              | emaj #'3       | phil's schema3_phil's tbl1_log |                 | phil's schema3_phil's tbl1_log_idx |                 | phil's schema3_phil's tbl1_log_seq | phil's schema3_phil's tbl1_log_fnct | tbl."phil's col11",tbl."phil's col12",tbl."phil\s col13"    | "phil's col11","phil's col12" | tbl."phil's col11" = keys."phil's col11" AND tbl."phil's col12" = keys."phil's col12" |                       
(24 rows)

select * from pg_tables where schemaname like 'emaj%' order by tablename;
 schemaname |           tablename            | tableowner | tablespace | hasindexes | hasrules | hastriggers | rowsecurity 
------------+--------------------------------+------------+------------+------------+----------+-------------+-------------
 emaj       | emaj_alter_plan                | postgres   |            | t          | f        | t           | f
 emaj       | emaj_group                     | postgres   |            | t          | f        | t           | f
 emaj       | emaj_group_def                 | postgres   |            | t          | f        | f           | f
 emaj       | emaj_hist                      | postgres   |            | t          | f        | f           | f
 emaj       | emaj_mark                      | postgres   |            | t          | f        | t           | f
 emaj       | emaj_param                     | postgres   |            | t          | f        | f           | f
 emaj       | emaj_relation                  | postgres   |            | t          | f        | t           | f
 emaj       | emaj_rlbk                      | postgres   |            | t          | f        | t           | f
 emaj       | emaj_rlbk_plan                 | postgres   |            | t          | f        | t           | f
 emaj       | emaj_rlbk_session              | postgres   |            | t          | f        | t           | f
 emaj       | emaj_rlbk_stat                 | postgres   |            | t          | f        | t           | f
 emaj       | emaj_schema                    | postgres   |            | t          | f        | t           | f
 emaj       | emaj_seq_hole                  | postgres   |            | t          | f        | t           | f
 emaj       | emaj_sequence                  | postgres   |            | t          | f        | t           | f
 emaj       | emaj_time_stamp                | postgres   |            | t          | f        | t           | f
 emajC      | myschema1_myTbl3_log           | postgres   | tsplog1    | t          | f        | f           | f
 emaj       | myschema1_mytbl1_log           | postgres   |            | t          | f        | f           | f
 emaj       | myschema1_mytbl2_log           | postgres   | tsplog1    | t          | f        | f           | f
 emajb      | myschema1_mytbl2b_log          | postgres   | tsp log'2  | t          | f        | f           | f
 emaj       | myschema1_mytbl4_log           | postgres   | tsplog1    | t          | f        | f           | f
 emajC      | myschema2_myTbl3_log           | postgres   |            | t          | f        | f           | f
 emaj       | myschema2_mytbl1_log           | postgres   |            | t          | f        | f           | f
 emaj       | myschema2_mytbl2_log           | postgres   |            | t          | f        | f           | f
 emaj       | myschema2_mytbl4_log           | postgres   |            | t          | f        | f           | f
 emaj       | myschema2_mytbl6_log           | postgres   |            | t          | f        | f           | f
 emaj       | myschema4_mypartp1_log         | postgres   |            | t          | f        | f           | f
 emaj       | myschema4_mypartp2_log         | postgres   |            | t          | f        | f           | f
 emaj       | myschema4_mytblc1_log          | postgres   |            | t          | f        | f           | f
 emaj       | myschema4_mytblc2_log          | postgres   |            | t          | f        | f           | f
 emaj       | myschema4_mytblm_log           | postgres   |            | t          | f        | f           | f
 emaj       | otherPrefix4mytbl5_log         | postgres   |            | t          | f        | f           | f
 emaj       | phil's schema3_myTbl2\_log     | postgres   |            | t          | f        | f           | f
 emaj #'3   | phil's schema3_phil's tbl1_log | postgres   |            | t          | f        | f           | f
(33 rows)

-----------------------------
-- emaj_comment_group() tests
-----------------------------
-- unknown group
select emaj.emaj_comment_group(NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_comment_group(text,text) line 7 at PERFORM
select emaj.emaj_comment_group('unknownGroup',NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_comment_group(text,text) line 7 at PERFORM
-- should be OK
select emaj.emaj_comment_group('myGroup1','a first comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('myGroup1','a better comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('emptyGroup','an empty group');
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name |         group_comment         
------------+-------------------------------
 myGroup1   | a better comment for group #1
(1 row)

select emaj.emaj_comment_group('myGroup1',NULL);
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_comment 
------------+---------------
 myGroup1   | 
(1 row)

-----------------------------
-- emaj_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_drop_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
select emaj.emaj_drop_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
-- group in logging state
select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                7
(1 row)

select emaj.emaj_drop_group('myGroup1');
ERROR:  _check_group_names: The group "myGroup1" is not in IDLE state.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 61 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

-- secondary schema with an object blocking the schema drop
begin;
  create table emajb.dummy_log (col1 int);
  select emaj.emaj_drop_group('myGroup1');
ERROR:  _drop_log_schemas: Cannot drop the schema "emajb". It probably owns unattended objects. Use the emaj_verify_all() function to get details.
CONTEXT:  PL/pgSQL function emaj._drop_log_schemas(text,boolean) line 33 at RAISE
SQL statement "SELECT emaj._drop_log_schemas(CASE WHEN v_isForced THEN 'FORCE_DROP_GROUP' ELSE 'DROP_GROUP' END, v_isForced)"
PL/pgSQL function emaj._drop_group(text,boolean) line 23 at PERFORM
SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function emaj.emaj_drop_group(text) line 14 at SQL statement
rollback;
-- should be OK
select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               7
(1 row)

select emaj.emaj_drop_group('myGroup2');
 emaj_drop_group 
-----------------
               8
(1 row)

select emaj.emaj_drop_group('emptyGroup');
 emaj_drop_group 
-----------------
               0
(1 row)

-- already dropped
select emaj.emaj_drop_group('myGroup2');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
-----------------------------
-- emaj_force_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_force_drop_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at PERFORM
select emaj.emaj_force_drop_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at PERFORM
-- already dropped
select emaj.emaj_force_drop_group('myGroup2');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at PERFORM
-- should be OK
select emaj.emaj_create_group('myGroup1',false);
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
 emaj_create_group 
-------------------
                 7
(1 row)

select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                7
(1 row)

select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     7
(1 row)

select emaj.emaj_create_group('myGroup2',true);
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

-----------------------------
-- test end: check and force sequences id
-----------------------------
select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
(2 rows)

select sch_name from emaj.emaj_schema order by 1;
 sch_name 
----------
 emaj
 emaj #'3
(2 rows)

select hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), 
       hist_user 
  from emaj.emaj_hist order by hist_id;
  hist_function   |   hist_event   |   hist_object    |         regexp_replace         | hist_user 
------------------+----------------+------------------+--------------------------------+-----------
 CREATE_GROUP     | BEGIN          | myGroup1         | rollbackable                   | postgres
 CREATE_GROUP     | SCHEMA CREATED | "emajC"          |                                | postgres
 CREATE_GROUP     | SCHEMA CREATED | emajb            |                                | postgres
 CREATE_GROUP     | END            | myGroup1         | 7 tables/sequences processed   | postgres
 CREATE_GROUP     | BEGIN          | emptyGroup       | audit_only                     | postgres
 CREATE_GROUP     | END            | emptyGroup       | 0 tables/sequences processed   | postgres
 CREATE_GROUP     | BEGIN          | myGroup2         | rollbackable                   | postgres
 CREATE_GROUP     | END            | myGroup2         | 8 tables/sequences processed   | postgres
 CREATE_GROUP     | BEGIN          | phil's group#3", | audit_only                     | postgres
 CREATE_GROUP     | SCHEMA CREATED | "emaj #'3"       |                                | postgres
 CREATE_GROUP     | END            | phil's group#3", | 4 tables/sequences processed   | postgres
 CREATE_GROUP     | BEGIN          | myGroup4         | rollbackable                   | postgres
 CREATE_GROUP     | END            | myGroup4         | 5 tables/sequences processed   | postgres
 COMMENT_GROUP    |                | myGroup1         |                                | postgres
 COMMENT_GROUP    |                | myGroup1         |                                | postgres
 COMMENT_GROUP    |                | emptyGroup       |                                | postgres
 COMMENT_GROUP    |                | myGroup1         |                                | postgres
 START_GROUP      | BEGIN          | myGroup1         | With log reset                 | postgres
 LOCK_GROUP       | BEGIN          | myGroup1         |                                | postgres
 LOCK_GROUP       | END            | myGroup1         | 5 tables locked, 0 deadlock(s) | postgres
 SET_MARK_GROUP   | BEGIN          | myGroup1         | START_%                        | postgres
 SET_MARK_GROUP   | END            | myGroup1         | START_%                        | postgres
 START_GROUP      | END            | myGroup1         | 7 tables/sequences processed   | postgres
 STOP_GROUP       | BEGIN          | myGroup1         |                                | postgres
 LOCK_GROUP       | BEGIN          | myGroup1         |                                | postgres
 LOCK_GROUP       | END            | myGroup1         | 5 tables locked, 0 deadlock(s) | postgres
 SET_MARK_GROUP   | BEGIN          | myGroup1         | STOP_%                         | postgres
 SET_MARK_GROUP   | END            | myGroup1         | STOP_%                         | postgres
 STOP_GROUP       | END            | myGroup1         | 7 tables/sequences processed   | postgres
 DROP_GROUP       | BEGIN          | myGroup1         |                                | postgres
 DROP_GROUP       | SCHEMA DROPPED | emajb            |                                | postgres
 DROP_GROUP       | END            | myGroup1         | 7 tables/sequences processed   | postgres
 DROP_GROUP       | BEGIN          | myGroup2         |                                | postgres
 DROP_GROUP       | SCHEMA DROPPED | "emajC"          |                                | postgres
 DROP_GROUP       | END            | myGroup2         | 8 tables/sequences processed   | postgres
 DROP_GROUP       | BEGIN          | emptyGroup       |                                | postgres
 DROP_GROUP       | END            | emptyGroup       | 0 tables/sequences processed   | postgres
 CREATE_GROUP     | BEGIN          | myGroup1         | audit_only                     | postgres
 CREATE_GROUP     | SCHEMA CREATED | "emajC"          |                                | postgres
 CREATE_GROUP     | SCHEMA CREATED | emajb            |                                | postgres
 CREATE_GROUP     | END            | myGroup1         | 7 tables/sequences processed   | postgres
 START_GROUP      | BEGIN          | myGroup1         | With log reset                 | postgres
 LOCK_GROUP       | BEGIN          | myGroup1         |                                | postgres
 LOCK_GROUP       | END            | myGroup1         | 5 tables locked, 0 deadlock(s) | postgres
 SET_MARK_GROUP   | BEGIN          | myGroup1         | START_%                        | postgres
 SET_MARK_GROUP   | END            | myGroup1         | START_%                        | postgres
 START_GROUP      | END            | myGroup1         | 7 tables/sequences processed   | postgres
 FORCE_DROP_GROUP | BEGIN          | myGroup1         |                                | postgres
 FORCE_DROP_GROUP | SCHEMA DROPPED | "emajC"          |                                | postgres
 FORCE_DROP_GROUP | SCHEMA DROPPED | emajb            |                                | postgres
 FORCE_DROP_GROUP | END            | myGroup1         | 7 tables/sequences processed   | postgres
 CREATE_GROUP     | BEGIN          | myGroup2         | rollbackable                   | postgres
 CREATE_GROUP     | SCHEMA CREATED | "emajC"          |                                | postgres
 CREATE_GROUP     | END            | myGroup2         | 8 tables/sequences processed   | postgres
 FORCE_DROP_GROUP | BEGIN          | myGroup2         |                                | postgres
 FORCE_DROP_GROUP | SCHEMA DROPPED | "emajC"          |                                | postgres
 FORCE_DROP_GROUP | END            | myGroup2         | 8 tables/sequences processed   | postgres
(57 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
       4 |                  0 | C
       5 |                  0 | C
       6 |                  0 | C
       9 |                  0 | C
      10 |                  0 | C
      11 |                  0 | M
      12 |                  0 | M
      13 |                  0 | C
      14 |                  0 | M
      15 |                  0 | C
(10 rows)

