-- misc.sql : test miscellaneous functions
--   emaj_reset_group(), 
--   emaj_estimate_rollback_group() and emaj_estimate_rollback_groups(),
--   emaj_snap_group(),
--   emaj_get_current_log_table(),
--   emaj_dump_changes_group() and emaj_gen_sql_dump_changes_group(),
--   emaj_gen_sql_group() and emaj_gen_sql_groups(),
--   table reclustering,
--   emaj_import_parameters_configuration() and emaj_export_parameters_configuration(),
--   emaj_purge_histories().
--
-- set sequence restart value
select public.handle_emaj_sequences(5200);
 handle_emaj_sequences 
-----------------------
 
(1 row)

-- define and create the temp file directory to be used by the script
\setenv EMAJTESTTMPDIR '/tmp/emaj_'`echo $PGVER`'/misc'
\set EMAJTESTTMPDIR `echo $EMAJTESTTMPDIR`
\! mkdir -p $EMAJTESTTMPDIR
   
-----------------------------
-- emaj_reset_group() test
-----------------------------
-- group is unknown
select emaj.emaj_reset_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 30 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := ARRAY[p_groupName], p_mayBeNull := FALSE, p_lockGroups := TRUE, p_checkIdle := TRUE)"
PL/pgSQL function emaj.emaj_reset_group(text) line 14 at PERFORM
select emaj.emaj_reset_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := ARRAY[p_groupName], p_mayBeNull := FALSE, p_lockGroups := TRUE, p_checkIdle := TRUE)"
PL/pgSQL function emaj.emaj_reset_group(text) line 14 at PERFORM
-- group still in logging state
select emaj.emaj_reset_group('myGroup1');
ERROR:  _check_group_names: The group "myGroup1" is not in IDLE state.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 74 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := ARRAY[p_groupName], p_mayBeNull := FALSE, p_lockGroups := TRUE, p_checkIdle := TRUE)"
PL/pgSQL function emaj.emaj_reset_group(text) line 14 at PERFORM
-- log tables are not yet empty
select count(*) from emaj_myschema1.mytbl1_log;
 count 
-------
    18
(1 row)

select count(*) from emaj_myschema1.mytbl2_log;
 count 
-------
     2
(1 row)

select count(*) from emaj_myschema1.mytbl2b_log;
 count 
-------
     2
(1 row)

select count(*) from emaj_myschema1."myTbl3_log";
 count 
-------
    10
(1 row)

select count(*) from emaj_myschema1.mytbl4_log;
 count 
-------
     1
(1 row)

-- should be OK
begin;
  select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

  select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                7
(1 row)

  select count(*) from emaj_myschema1.mytbl1_log;
 count 
-------
     0
(1 row)

  select count(*) from emaj_myschema1.mytbl2_log;
 count 
-------
     0
(1 row)

  select count(*) from emaj_myschema1.mytbl2b_log;
 count 
-------
     0
(1 row)

  select count(*) from emaj_myschema1."myTbl3_log";
 count 
-------
     0
(1 row)

  select count(*) from emaj_myschema1.mytbl4_log;
 count 
-------
     0
(1 row)

rollback;
begin;
  select emaj.emaj_stop_group('emptyGroup');
 emaj_stop_group 
-----------------
               0
(1 row)

  select emaj.emaj_reset_group('emptyGroup');
 emaj_reset_group 
------------------
                0
(1 row)

rollback;
-----------------------------
-- emaj_estimate_rollback_group() and emaj_estimate_rollback_groups() tests
--
-- When emaj is not created as an extension - i.e. is created with the psql script - the estimate durations are different.
-- This is normal as the FK are not processed the same way.
-----------------------------
-- group is unknown
select emaj.emaj_estimate_rollback_group(NULL,NULL,FALSE);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 30 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 18 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
select emaj.emaj_estimate_rollback_group('unknownGroup',NULL,TRUE);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 18 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
select emaj.emaj_estimate_rollback_groups('{"myGroup2","unknownGroup"}',NULL,TRUE);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 18 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_groups(text[],text,boolean) line 7 at RETURN
-- invalid marks
select emaj.emaj_estimate_rollback_group('myGroup2','dummyMark',TRUE);
ERROR:  _check_mark_name: The mark "dummyMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_mark, p_checkActive := TRUE)"
PL/pgSQL function emaj._rlbk_check(text[],text,boolean,boolean) line 21 at SQL statement
SQL statement "SELECT emaj._rlbk_check(p_groupNames, p_mark, TRUE, TRUE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 25 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
select emaj.emaj_set_mark_group('myGroup1','Mark21');
 emaj_set_mark_group 
---------------------
                   7
(1 row)

select emaj.emaj_estimate_rollback_groups(array['myGroup1','myGroup2'],'Mark21',TRUE);
ERROR:  _check_mark_name: The mark "Mark21" does not represent the same point in time for all groups.
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 72 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_mark, p_checkActive := TRUE)"
PL/pgSQL function emaj._rlbk_check(text[],text,boolean,boolean) line 21 at SQL statement
SQL statement "SELECT emaj._rlbk_check(p_groupNames, p_mark, TRUE, TRUE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 25 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_groups(text[],text,boolean) line 7 at RETURN
-- group not in logging state
begin;
  select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

  select emaj.emaj_estimate_rollback_group('myGroup1','Mark11',FALSE);
ERROR:  _check_group_names: The group "myGroup1" is not in LOGGING state.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 87 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := FALSE, p_lockGroups := FALSE,
                                     p_checkLogging := TRUE, p_checkRollbackable := TRUE)"
PL/pgSQL function emaj._rlbk_check(text[],text,boolean,boolean) line 13 at SQL statement
SQL statement "SELECT emaj._rlbk_check(p_groupNames, p_mark, TRUE, TRUE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 25 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
rollback;
-- estimate a rollback of an empty group
select emaj.emaj_estimate_rollback_group('emptyGroup','EGM4',TRUE);
 emaj_estimate_rollback_group 
------------------------------
 @ 0
(1 row)

-- insert 1 timing parameters (=> so use 3 default values)
INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('fixed_step_rollback_duration','2.5 millisecond'::interval);
-- analyze tables to get proper reltuples statistics
vacuum analyze myschema2.mytbl4;
select reltuples from pg_class, pg_namespace where relnamespace=pg_namespace.oid and relname = 'mytbl4' and nspname = 'myschema2';
 reltuples 
-----------
       100
(1 row)

-- estimate with empty rollback statistics and default parameters
delete from emaj.emaj_rlbk_stat;
-- estimates with empty rollback statistics but 1 temporarily modified parameter ; no table to rollback
-- check in passing that the simulation is not blocked by protections set on groups or marks
begin;
  select emaj.emaj_protect_group('myGroup2');
 emaj_protect_group 
--------------------
                  1
(1 row)

  select emaj.emaj_protect_mark_group('myGroup2','EMAJ_LAST_MARK');
 emaj_protect_mark_group 
-------------------------
                       1
(1 row)

  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('fixed_table_rollback_duration','1.4 millisecond'::interval);
  select emaj.emaj_estimate_rollback_group('myGroup2','EMAJ_LAST_MARK',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 0.0205 secs
(1 row)

-- should return 0.0205 sec
  select emaj.emaj_unprotect_mark_group('myGroup2','EMAJ_LAST_MARK');
 emaj_unprotect_mark_group 
---------------------------
                         1
(1 row)

  select emaj.emaj_unprotect_group('myGroup2');
 emaj_unprotect_group 
----------------------
                    1
(1 row)

rollback;
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 1.4086 secs
(1 row)

-- should return 1.4086 sec (or 1.4291 sec is emaj is not an extension)
-- estimates with empty rollback statistics but temporarily modified parameters
begin;
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('avg_row_rollback_duration','150 microsecond'::interval);
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('avg_row_delete_log_duration','12 microsecond'::interval);
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('avg_fkey_check_duration','27 microsecond'::interval);
  UPDATE emaj.emaj_param SET param_value_interval = '7 millisecond'::interval WHERE param_key = 'fixed_step_rollback_duration';
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('fixed_dblink_rollback_duration','2.5 millisecond'::interval);
  select emaj.emaj_estimate_rollback_groups('{"myGroup2"}','Mark21',TRUE);
 emaj_estimate_rollback_groups 
-------------------------------
 @ 1.814 secs
(1 row)

-- should return 1.814 sec (or 1.8285 sec is emaj is not an extension)
rollback;
-- estimate with added rollback statistics about fkey drops, recreations and checks, and rollback sequences
--   drop the foreign key on emaj_rlbk_stat to easily temporarily insert dummy rows
alter table emaj.emaj_rlbk_stat drop constraint emaj_rlbk_stat_rlbt_rlbk_id_fkey;
insert into emaj.emaj_rlbk_stat values
  ('DROP_FK','','','',1,1,'0.003 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('ADD_FK','myschema2','mytbl4','mytbl4_col44_fkey',1,300,'0.036 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('SET_FK_IMM','myschema2','mytbl4','mytbl4_col43_fkey',1,2000,'0.030 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DROP_FK','','','',2,1,'0.0042 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('ADD_FK','myschema2','mytbl4','mytbl4_col44_fkey',2,200,'0.020 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('SET_FK_IMM','myschema2','mytbl4','mytbl4_col43_fkey',2,1200,'0.015 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_SEQUENCES','','','',1,2,'0.003 SECONDS'::interval);
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 1.4071 secs
(1 row)

-- should return 1.4071 sec (or 1.435306 sec is emaj is not an extension)
-- estimate with added statistics about tables rollbacks
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl1','',1,5350,'1.000 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl2','',1,100,'0.004 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl2','',2,200,'0.010 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl2','',3,20000,'1.610 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','myTbl3','',1,99,'0.004 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','myTbl3','',2,101,'0.008 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl4','',1,50000,'3.600 SECONDS'::interval);
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 2.275704 secs
(1 row)

-- should return 2.275704 sec (or 2.30391 sec is emaj is not an extension)
-- estimate with added statistics about log deletes and CTRLxDBLINK pseudo steps
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl1','',1,5350,'0.250 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl2','',1,150,'0.001 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl2','',2,200,'0.003 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl2','',3,20000,'1.610 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','myTbl3','',1,99,'0.001 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','myTbl3','',2,151,'0.002 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl4','',1,50000,'0.900 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('CTRL+DBLINK','','','',1,10,'0.005 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('CTRL-DBLINK','','','',2,10,'0.035 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('CTRL-DBLINK','','','',3,10,'0.025 SECONDS'::interval);
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 2.643791 secs
(1 row)

-- should return 2.643791 sec (or 2.668997 sec is emaj is not an extension)
-- estimate with 2 groups and a SET_FK_DEF step
vacuum analyze myschema1.mytbl4;
select reltuples from pg_class, pg_namespace where relnamespace=pg_namespace.oid and relname = 'mytbl4' and nspname = 'myschema1';
 reltuples 
-----------
         1
(1 row)

begin;
-- temporarily insert new rows into myTbl4 of myschema1
  insert into myschema1.myTbl4 select i,'FK...',2,1,'ABC' from generate_series (10,20) as i;
  select emaj.emaj_estimate_rollback_groups('{"myGroup1","myGroup2"}','Multi-1',FALSE);
 emaj_estimate_rollback_groups 
-------------------------------
 @ 2.675001 secs
(1 row)

-- should return 2.675001 sec (or 2.730913 sec is emaj is not an extension)
rollback;
-- delete all manualy inserted rollback statistics, cleanup the statistics table and recreate its foreign key
delete from emaj.emaj_rlbk_stat;
vacuum emaj.emaj_rlbk_stat;
alter table emaj.emaj_rlbk_stat add FOREIGN KEY (rlbt_rlbk_id) REFERENCES emaj.emaj_rlbk (rlbk_id);
-- check for emaj_estimate_rollback_group()
select hist_id, hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user
  from (select * from emaj.emaj_hist where hist_id >= 5200 order by hist_id) as t;
 hist_id |   hist_function    |     hist_event     |         hist_object          |         regexp_replace         | hist_user 
---------+--------------------+--------------------+------------------------------+--------------------------------+-----------
    5227 | SET_MARK_GROUP     | BEGIN              | myGroup1                     |                                | postgres
    5228 | LOCK_GROUP         | BEGIN              | myGroup1                     |                                | postgres
    5229 | LOCK_GROUP         | END                | myGroup1                     | 5 tables locked, 0 deadlock(s) | postgres
    5230 | SET_MARK_GROUP     | TIME STAMP SET     | 5202                         |                                | postgres
    5231 | CLEANUP_RLBK_STATE |                    | Rollback id 5000             | set to COMMITTED               | postgres
    5232 | CLEANUP_RLBK_STATE |                    | Rollback id 5001             | set to COMMITTED               | postgres
    5233 | CLEANUP_RLBK_STATE |                    | Rollback id 5002             | set to COMMITTED               | postgres
    5234 | SET_MARK_GROUP     | END                | myGroup1                     | Mark21                         | postgres
    5242 |                    | INSERTED PARAMETER | fixed_step_rollback_duration | @ 0.0025 secs                  | postgres
(9 rows)

-- set sequence restart value
select public.handle_emaj_sequences(5300);
 handle_emaj_sequences 
-----------------------
 
(1 row)

-----------------------------
-- emaj_snap_group() tests
-----------------------------
-- group is unknown
select emaj.emaj_snap_group(NULL,NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 30 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := ARRAY[p_groupName], p_mayBeNull := FALSE, p_lockGroups := FALSE)"
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 28 at PERFORM
select emaj.emaj_snap_group('unknownGroup',NULL,NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := ARRAY[p_groupName], p_mayBeNull := FALSE, p_lockGroups := FALSE)"
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 28 at PERFORM
-- invalid directory
select emaj.emaj_snap_group('myGroup1',NULL,NULL);
ERROR:  emaj_snap_group: The directory parameter cannot be NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 31 at RAISE
select emaj.emaj_snap_group('myGroup1','unknown_directory',NULL);
ERROR:  relative path not allowed for COPY to file
CONTEXT:  SQL statement "COPY (SELECT * FROM myschema1."myTbl3" ORDER BY col31) TO 'unknown_directory/myschema1_myTbl3.snap' "
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 76 at EXECUTE
select emaj.emaj_snap_group('myGroup1','/unknown_directory',NULL);
ERROR:  could not open file "/unknown_directory/myschema1_myTbl3.snap" for writing: No such file or directory
HINT:  COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY (SELECT * FROM myschema1."myTbl3" ORDER BY col31) TO '/unknown_directory/myschema1_myTbl3.snap' "
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 76 at EXECUTE
-- invalid COPY TO options
select emaj.emaj_snap_group('myGroup1',:'EMAJTESTTMPDIR','dummy_option');
ERROR:  syntax error at or near "dummy_option"
LINE 1: ...l31) TO '/tmp/emaj_12/misc/myschema1_myTbl3.snap' dummy_opti...
                                                             ^
QUERY:  COPY (SELECT * FROM myschema1."myTbl3" ORDER BY col31) TO '/tmp/emaj_12/misc/myschema1_myTbl3.snap' dummy_option
CONTEXT:  PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 76 at EXECUTE
-- SQL injection attempt
select emaj.emaj_snap_group('myGroup1',:'EMAJTESTTMPDIR','; CREATE ROLE fake LOGIN PASSWORD '''' SUPERUSER');
ERROR:  emaj_snap_group: The COPY options parameter format is invalid.
CONTEXT:  PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 35 at RAISE
-- should be OK (even when executed twice, files being overwriten)
select emaj.emaj_snap_group('emptyGroup',:'EMAJTESTTMPDIR','');
 emaj_snap_group 
-----------------
               0
(1 row)

\! ls $EMAJTESTTMPDIR
_INFO
select emaj.emaj_snap_group('myGroup1',:'EMAJTESTTMPDIR','');
 emaj_snap_group 
-----------------
               7
(1 row)

select emaj.emaj_snap_group('myGroup1',:'EMAJTESTTMPDIR','CSV HEADER DELIMITER '';'' ');
 emaj_snap_group 
-----------------
               7
(1 row)

\! ls $EMAJTESTTMPDIR
_INFO
myschema1_myTbl3.snap
myschema1_myTbl3_col31_seq.snap
myschema1_mytbl1.snap
myschema1_mytbl2.snap
myschema1_mytbl2b.snap
myschema1_mytbl2b_col20_seq.snap
myschema1_mytbl4.snap
\! rm $EMAJTESTTMPDIR/*
select emaj.emaj_snap_group('phil''s group#3",',:'EMAJTESTTMPDIR','');
 emaj_snap_group 
-----------------
               4
(1 row)

\! ls $EMAJTESTTMPDIR
_INFO
phil_s_schema_3_myTbl2_.snap
phil_s_schema_3_myTbl2__col21_seq.snap
phil_s_schema_3_phil_s_seq_1.snap
phil_s_schema_3_phil_s_tbl1.snap
\! rm $EMAJTESTTMPDIR/*
-----------------------------
-- emaj_get_current_log_table() tests
-----------------------------
-- not found
select * from emaj.emaj_get_current_log_table('myschema1', 'dummy_table');
 log_schema | log_table 
------------+-----------
            | 
(1 row)

-- found
select * from emaj.emaj_get_current_log_table('myschema1', 'mytbl1');
   log_schema   | log_table  
----------------+------------
 emaj_myschema1 | mytbl1_log
(1 row)

select 'select count(*) from ' || quote_ident(log_schema) || '.' || quote_ident(log_table)
  from emaj.emaj_get_current_log_table('myschema1','mytbl1');
                    ?column?                    
------------------------------------------------
 select count(*) from emaj_myschema1.mytbl1_log
(1 row)

-- check for emaj_snap_group()
select hist_id, hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user
  from (select * from emaj.emaj_hist where hist_id >= 5300 order by hist_id) as t;
 hist_id | hist_function | hist_event |   hist_object    |        regexp_replace        | hist_user 
---------+---------------+------------+------------------+------------------------------+-----------
    5307 | SNAP_GROUP    | BEGIN      | emptyGroup       | /tmp/emaj_12/misc            | postgres
    5308 | SNAP_GROUP    | END        | emptyGroup       | 0 tables/sequences processed | postgres
    5309 | SNAP_GROUP    | BEGIN      | myGroup1         | /tmp/emaj_12/misc            | postgres
    5310 | SNAP_GROUP    | END        | myGroup1         | 7 tables/sequences processed | postgres
    5311 | SNAP_GROUP    | BEGIN      | myGroup1         | /tmp/emaj_12/misc            | postgres
    5312 | SNAP_GROUP    | END        | myGroup1         | 7 tables/sequences processed | postgres
    5313 | SNAP_GROUP    | BEGIN      | phil's group#3", | /tmp/emaj_12/misc            | postgres
    5314 | SNAP_GROUP    | END        | phil's group#3", | 4 tables/sequences processed | postgres
(8 rows)

-- set sequence restart value
select public.handle_emaj_sequences(5400);
 handle_emaj_sequences 
-----------------------
 
(1 row)

-----------------------------
-- emaj_dump_changes_group() and emaj_gen_sql_dump_changes_group() tests
-----------------------------
--
-- Test errors with input parameters
--
-- group is unknown
select emaj.emaj_gen_sql_dump_changes_group('dummy', NULL, NULL, NULL, NULL);
ERROR:  _check_group_names: The group "dummy" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := ARRAY[p_groupName], p_mayBeNull := FALSE, p_lockGroups := FALSE)"
PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 50 at PERFORM
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
-- start mark is null or unknown
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', NULL, NULL, NULL, NULL);
ERROR:  _check_marks_range: The first mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 16 at RAISE
SQL statement "SELECT *                                                                                                                                     FROM emaj._check_marks_range(p_groupNames := ARRAY[p_groupName], p_firstMark := p_firstMark, p_lastMark := p_lastMark,
                                   p_finiteUpperBound := TRUE)"
PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 52 at SQL statement
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'dummy', NULL, NULL, NULL);
ERROR:  _check_mark_name: The mark "dummy" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_firstMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 19 at SQL statement
SQL statement "SELECT *                                                                                                                                     FROM emaj._check_marks_range(p_groupNames := ARRAY[p_groupName], p_firstMark := p_firstMark, p_lastMark := p_lastMark,
                                   p_finiteUpperBound := TRUE)"
PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 52 at SQL statement
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
-- end mark is null or unknown
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', NULL, NULL, NULL);
ERROR:  _check_marks_range: The last mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 29 at RAISE
SQL statement "SELECT *                                                                                                                                     FROM emaj._check_marks_range(p_groupNames := ARRAY[p_groupName], p_firstMark := p_firstMark, p_lastMark := p_lastMark,
                                   p_finiteUpperBound := TRUE)"
PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 52 at SQL statement
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'dummy', NULL, NULL);
ERROR:  _check_mark_name: The mark "dummy" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT *                                                                                                                                     FROM emaj._check_marks_range(p_groupNames := ARRAY[p_groupName], p_firstMark := p_firstMark, p_lastMark := p_lastMark,
                                   p_finiteUpperBound := TRUE)"
PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 52 at SQL statement
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
-- end mark is prior start mark
-- just check the error is trapped, because the error message contents timestamps
do language plpgsql
$$
begin
  begin
    perform emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark23', 'Mark21', NULL, NULL);
    return;
  exception when raise_exception then
    raise notice 'Error trapped on emaj_gen_sql_dump_changes_group() call';
  end;
end;
$$;
NOTICE:  Error trapped on emaj_gen_sql_dump_changes_group() call
-- invalid options
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: The option "DUMMY" is unknown.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 179 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'COLS_ORDER = dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: Error on the option "COLS_ORDER=DUMMY". The COLS_ORDER option only accepts LOG_TABLE or PK values).
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 95 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('phil''s group#3",', 'Mark4', 'Mark5', 'COLS_ORDER = PK', NULL);
ERROR:  _gen_sql_dump_changes_group: A CONSOLIDATION level set to PARTIAL or FULL or a COLS_ORDER set to PK or an ORDER_BY set to PK cannot support tables without primary key. And no primary key is defined for tables "phil's schema"3.myTbl2\"
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 211 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'COPY_OPTIONS=()', NULL);
ERROR:  _gen_sql_dump_changes_group: The option "COPY_OPTIONS=()" is unknown.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 179 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'CONSOLIDATION = dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: Error on the option "CONSOLIDATION=DUMMY". The CONSOLIDATION option only accepts NONE or PARTIAL or FULL values).
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 108 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('phil''s group#3",', 'Mark4', 'Mark5', 'CONSOLIDATION = FULL', NULL);
ERROR:  _gen_sql_dump_changes_group: A CONSOLIDATION level set to PARTIAL or FULL or a COLS_ORDER set to PK or an ORDER_BY set to PK cannot support tables without primary key. And no primary key is defined for tables "phil's schema"3.myTbl2\"
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 211 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('phil''s group#3",', 'Mark4', 'Mark5', 'CONSOLIDATION = partial', NULL);
ERROR:  _gen_sql_dump_changes_group: A CONSOLIDATION level set to PARTIAL or FULL or a COLS_ORDER set to PK or an ORDER_BY set to PK cannot support tables without primary key. And no primary key is defined for tables "phil's schema"3.myTbl2\"
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 211 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'EMAJ_COLUMNS = dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: Error on the option "EMAJ_COLUMNS=DUMMY". The EMAJ_COLUMNS option only accepts ALL or MIN values or a (columns list).
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 134 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'EMAJ_COLUMNS = ()', NULL);
ERROR:  _gen_sql_dump_changes_group: In the EMAJ_COLUMN option, the "emaj_tuple" column must be part of the columns list.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 130 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'EMAJ_COLUMNS = (emaj_tuple , dummy)', NULL);
NOTICE:  table "emaj_temp_sql" does not exist, skipping
ERROR:  _gen_sql_dump_changes_tbl: The emaj column "dummy" from the EMAJ_COLUMNS option (emaj_tuple,dummy) is not valid for table emaj_myschema2.myTbl3_log.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_tbl(text,text,integer,text[],bigint,bigint,text,text,text,text) line 64 at RAISE
PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 324 at assignment
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'NO_EMPTY_FILES', NULL);
ERROR:  _gen_sql_dump_changes_group: The option "NO_EMPTY_FILES" is unknown.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 179 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'Tables_Only, Sequences_Only', NULL);
ERROR:  _gen_sql_dump_changes_group: SEQUENCES_ONLY and TABLES_ONLY options are mutually exclusive.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 186 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'ORDER_BY = dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: Error on the option "ORDER_BY=DUMMY". The ORDER_BY option only accepts PK or TIME values.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 147 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('phil''s group#3",', 'Mark4', 'Mark5', 'ORDER_BY = pk', NULL);
ERROR:  _gen_sql_dump_changes_group: A CONSOLIDATION level set to PARTIAL or FULL or a COLS_ORDER set to PK or an ORDER_BY set to PK cannot support tables without primary key. And no primary key is defined for tables "phil's schema"3.myTbl2\"
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 211 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'SQL_FORMAT = dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: Error on the option "SQL_FORMAT=DUMMY". The SQL_FORMAT option only accepts RAW or PRETTY values.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 171 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'PSQL_COPY_DIR=dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: Error on the option "PSQL_COPY_DIR=DUMMY". The directory name must be set between ().
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 154 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'PSQL_COPY_DIR=(' || :'EMAJTESTTMPDIR' || '), SQL_FORMAT=PRETTY', NULL);
ERROR:  _gen_sql_dump_changes_group: PSQL_COPY_DIR and FORMAT=PRETTY options are mutually exclusive.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 194 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'PSQL_COPY_OPTIONS=dummy', NULL);
ERROR:  _gen_sql_dump_changes_group: Error on the option "PSQL_COPY_OPTIONS=DUMMY". The COPY options list must be set between ().
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 159 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'PSQL_COPY_OPTIONS=(format csv)', NULL);
ERROR:  _gen_sql_dump_changes_group: the PSQL_COPY_OPTIONS option needs a PSQL_COPY_DIR option to be set.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 190 at RAISE
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
select emaj.emaj_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'PSQL_COPY_DIR=dummy', NULL, :'EMAJTESTTMPDIR');
ERROR:  _gen_sql_dump_changes_group: The option "PSQL_COPY_DIR=DUMMY" is unknown.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 179 at RAISE
SQL statement "SELECT p_copyOptions, p_noEmptyFiles, g.p_lastMark
                                                           FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, FALSE) g"
PL/pgSQL function emaj.emaj_dump_changes_group(text,text,text,text,text[],text) line 39 at SQL statement
select emaj.emaj_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'PSQL_COPY_OPTIONS=()', NULL, :'EMAJTESTTMPDIR');
ERROR:  _gen_sql_dump_changes_group: The option "PSQL_COPY_OPTIONS=()" is unknown.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 179 at RAISE
SQL statement "SELECT p_copyOptions, p_noEmptyFiles, g.p_lastMark
                                                           FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, FALSE) g"
PL/pgSQL function emaj.emaj_dump_changes_group(text,text,text,text,text[],text) line 39 at SQL statement
select emaj.emaj_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'COPY_OPTIONS=dummy', NULL, :'EMAJTESTTMPDIR');
ERROR:  _gen_sql_dump_changes_group: Error on the option "COPY_OPTIONS=DUMMY". The COPY options must be set between ().
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 114 at RAISE
SQL statement "SELECT p_copyOptions, p_noEmptyFiles, g.p_lastMark
                                                           FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, FALSE) g"
PL/pgSQL function emaj.emaj_dump_changes_group(text,text,text,text,text[],text) line 39 at SQL statement
select emaj.emaj_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'COPY_OPTIONS=(dummy)', NULL, :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
ERROR:  option "dummy" not recognized
LINE 1: COPY (SELECT '') TO '/tmp/emaj_12/misc/_INFO' (dummy)
                                                       ^
QUERY:  COPY (SELECT '') TO '/tmp/emaj_12/misc/_INFO' (dummy)
CONTEXT:  PL/pgSQL function emaj.emaj_dump_changes_group(text,text,text,text,text[],text) line 46 at EXECUTE
select emaj.emaj_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'COPY_OPTIONS=(;)', NULL, :'EMAJTESTTMPDIR');
ERROR:  _gen_sql_dump_changes_group: Unquoted semi-column in COPY options is illegal.
CONTEXT:  PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 119 at RAISE
SQL statement "SELECT p_copyOptions, p_noEmptyFiles, g.p_lastMark
                                                           FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, FALSE) g"
PL/pgSQL function emaj.emaj_dump_changes_group(text,text,text,text,text[],text) line 39 at SQL statement
-- invalid relations array
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, ARRAY['dummy']);
ERROR:  _check_tblseqs_filter: 1 tables/sequences (dummy) never belonged to any of the selected tables groups during the requested marks range.
CONTEXT:  PL/pgSQL function emaj._check_tblseqs_filter(text[],text[],bigint,bigint,boolean) line 48 at RAISE
PL/pgSQL function emaj._gen_sql_dump_changes_group(text,text,text,text,text[],boolean) line 219 at assignment
SQL statement "SELECT p_nbStmt
                          FROM emaj._gen_sql_dump_changes_group(p_groupName, p_firstMark, p_lastMark, p_optionsList, p_tblseqs, TRUE)"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[]) line 25 at SQL statement
-- invalid output location
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, NULL, NULL);
ERROR:  emaj_gen_sql_dump_changes_group: The output script location parameter cannot be NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[],text) line 36 at RAISE
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, NULL, 'dummy');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
ERROR:  relative path not allowed for COPY to file
CONTEXT:  SQL statement "COPY (SELECT sql_text FROM emaj_temp_sql ORDER BY sql_stmt_number, sql_line_number) TO 'dummy'"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[],text) line 61 at EXECUTE
select emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, NULL, '/dummy');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
ERROR:  could not open file "/dummy" for writing: Permission denied
HINT:  COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY (SELECT sql_text FROM emaj_temp_sql ORDER BY sql_stmt_number, sql_line_number) TO '/dummy'"
PL/pgSQL function emaj.emaj_gen_sql_dump_changes_group(text,text,text,text,text[],text) line 61 at EXECUTE
select emaj.emaj_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, NULL, NULL);
NOTICE:  table "emaj_temp_sql" does not exist, skipping
ERROR:  emaj_dump_changes_group: The directory parameter cannot be NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_dump_changes_group(text,text,text,text,text[],text) line 44 at RAISE
select emaj.emaj_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, NULL, 'dummy');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
ERROR:  relative path not allowed for COPY to file
CONTEXT:  SQL statement "COPY (SELECT '') TO 'dummy/_INFO' "
PL/pgSQL function emaj.emaj_dump_changes_group(text,text,text,text,text[],text) line 46 at EXECUTE
--
-- various options influencing the generated SQL
--
SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', '', NULL);
NOTICE:  table "emaj_temp_sql" does not exist, skipping
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT * FROM emaj_temp_sql;
 sql_stmt_number | sql_line_number | sql_rel_kind | sql_schema |    sql_tblseq    | sql_first_mark | sql_last_mark | sql_group | sql_nb_changes | sql_file_name_suffix |                                                                                                                                                                sql_text                                                                                                                                                                | sql_result 

               0 |               0 |              |            |                  |                |               |           |                |                      | -- Generated SQL for dumping changes in tables group "myGroup2" between marks "Mark21" and "Mark23"                                                                                                                                                                                                                                    |           
               1 |               0 | table        | myschema2  | myTbl3           | Mark21         | Mark23        | myGroup2  |             10 |                      | -- Dump changes for table myschema2.myTbl3 between marks "Mark21" and "Mark23" (10 changes)                                                                                                                                                                                                                                            |           
               1 |               1 | table        | myschema2  | myTbl3           | Mark21         | Mark23        | myGroup2  |             10 | .changes             | SELECT tbl.* FROM emaj_myschema2."myTbl3_log" tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                 |           
               2 |               0 | table        | myschema2  | mytbl1           | Mark21         | Mark23        | myGroup2  |          10700 |                      | -- Dump changes for table myschema2.mytbl1 between marks "Mark21" and "Mark23" (10700 changes)                                                                                                                                                                                                                                         |           
               2 |               1 | table        | myschema2  | mytbl1           | Mark21         | Mark23        | myGroup2  |          10700 | .changes             | SELECT tbl.* FROM emaj_myschema2.mytbl1_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                   |           
               3 |               0 | table        | myschema2  | mytbl2           | Mark21         | Mark23        | myGroup2  |            900 |                      | -- Dump changes for table myschema2.mytbl2 between marks "Mark21" and "Mark23" (900 changes)                                                                                                                                                                                                                                           |           
               3 |               1 | table        | myschema2  | mytbl2           | Mark21         | Mark23        | myGroup2  |            900 | .changes             | SELECT tbl.* FROM emaj_myschema2.mytbl2_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                   |           
               4 |               0 | table        | myschema2  | mytbl4           | Mark21         | Mark23        | myGroup2  |            100 |                      | -- Dump changes for table myschema2.mytbl4 between marks "Mark21" and "Mark23" (100 changes)                                                                                                                                                                                                                                           |           
               4 |               1 | table        | myschema2  | mytbl4           | Mark21         | Mark23        | myGroup2  |            100 | .changes             | SELECT tbl.* FROM emaj_myschema2.mytbl4_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                   |           
               5 |               0 | table        | myschema2  | mytbl5           | Mark21         | Mark23        | myGroup2  |              0 |                      | -- Dump changes for table myschema2.mytbl5 between marks "Mark21" and "Mark23" (0 changes)                                                                                                                                                                                                                                             |           
               5 |               1 | table        | myschema2  | mytbl5           | Mark21         | Mark23        | myGroup2  |              0 | .changes             | SELECT tbl.* FROM emaj_myschema2.mytbl5_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                   |           
               6 |               0 | table        | myschema2  | mytbl6           | Mark21         | Mark23        | myGroup2  |              0 |                      | -- Dump changes for table myschema2.mytbl6 between marks "Mark21" and "Mark23" (0 changes)                                                                                                                                                                                                                                             |           
               6 |               1 | table        | myschema2  | mytbl6           | Mark21         | Mark23        | myGroup2  |              0 | .changes             | SELECT tbl.* FROM emaj_myschema2.mytbl6_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                   |           
               7 |               0 | table        | myschema2  | mytbl7           | Mark21         | Mark23        | myGroup2  |              0 |                      | -- Dump changes for table myschema2.mytbl7 between marks "Mark21" and "Mark23" (0 changes)                                                                                                                                                                                                                                             |           
               7 |               1 | table        | myschema2  | mytbl7           | Mark21         | Mark23        | myGroup2  |              0 | .changes             | SELECT tbl.* FROM emaj_myschema2.mytbl7_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                   |           
               8 |               0 | table        | myschema2  | mytbl8           | Mark21         | Mark23        | myGroup2  |              0 |                      | -- Dump changes for table myschema2.mytbl8 between marks "Mark21" and "Mark23" (0 changes)                                                                                                                                                                                                                                             |           
               8 |               1 | table        | myschema2  | mytbl8           | Mark21         | Mark23        | myGroup2  |              0 | .changes             | SELECT tbl.* FROM emaj_myschema2.mytbl8_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC;                                                                                                                                                                   |           
               9 |               0 | sequence     | myschema2  | myTbl3_col31_seq | Mark21         | Mark23        | myGroup2  |                |                      | -- Dump changes for sequence myschema2.myTbl3_col31_seq between marks "Mark21" and "Mark23"                                                                                                                                                                                                                                            |           
               9 |               1 | sequence     | myschema2  | myTbl3_col31_seq | Mark21         | Mark23        | myGroup2  |                | .changes             | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myTbl3_col31_seq' AND sequ_time_id = 4029 UNION ALL SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myTbl3_col31_seq' AND sequ_time_id = 5003 ORDER BY emaj_tuple DESC ; |           
              10 |               0 | sequence     | myschema2  | myseq1           | Mark21         | Mark23        | myGroup2  |                |                      | -- Dump changes for sequence myschema2.myseq1 between marks "Mark21" and "Mark23"                                                                                                                                                                                                                                                      |           
              10 |               1 | sequence     | myschema2  | myseq1           | Mark21         | Mark23        | myGroup2  |                | .changes             | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myseq1' AND sequ_time_id = 4029 UNION ALL SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myseq1' AND sequ_time_id = 5003 ORDER BY emaj_tuple DESC ;                     |           
(21 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'CONSOLIDATION=NONE,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                       sql_text                        
------------+-------------------------------------------------------
 mytbl1     | SELECT tbl.*
 mytbl1     |   FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |   WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |     AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |   ORDER BY emaj_gid, emaj_tuple DESC;
 myseq1     | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 4029
 myseq1     |  UNION ALL 
 myseq1     | SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 5003
 myseq1     |  ORDER BY emaj_tuple DESC
 myseq1     | ;
(16 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'CONSOLIDATION=PARTIAL,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                                 sql_text                                 
------------+--------------------------------------------------------------------------
 mytbl1     | WITH keys AS (
 mytbl1     |   SELECT col11,col12, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid
 mytbl1     |     FROM emaj_myschema2.mytbl1_log
 mytbl1     |     WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |       AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |     GROUP BY col11,col12
 mytbl1     |   ) 
 mytbl1     | SELECT tbl.col11,tbl.col12,emaj_tuple,tbl.col13
 mytbl1     |   FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |        JOIN keys ON (tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |   WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid)
 mytbl1     |      OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid)
 mytbl1     |   ORDER BY tbl.col11,tbl.col12, emaj_gid, emaj_tuple DESC;
 myseq1     | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 4029
 myseq1     |  UNION ALL 
 myseq1     | SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 5003
 myseq1     |  ORDER BY emaj_tuple DESC
 myseq1     | ;
(24 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'CONSOLIDATION=FULL,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 12 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                                                     sql_text                                                     
------------+------------------------------------------------------------------------------------------------------------------
 mytbl1     | WITH keys AS (
 mytbl1     |   SELECT col11,col12, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid
 mytbl1     |     FROM emaj_myschema2.mytbl1_log
 mytbl1     |     WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |       AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |     GROUP BY col11,col12
 mytbl1     |   ),
 mytbl1     |      consolidated AS (
 mytbl1     |   SELECT tbl.*
 mytbl1     |     FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |          JOIN keys ON (tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |     WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid)
 mytbl1     |        OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid)
 mytbl1     |   ),
 mytbl1     |      unchanged_keys AS (
 mytbl1     |   SELECT r1.col11,r1.col12
 mytbl1     |     FROM consolidated r1
 mytbl1     |          JOIN consolidated r2 ON (r1.col11=r2.col11 AND r1.col12=r2.col12)
 mytbl1     |     WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW'
 mytbl1     |       AND (r1.col13=r2.col13 OR (r1.col13 IS NULL AND r2.col13 IS NULL))
 mytbl1     |   )
 mytbl1     |   SELECT tbl.col11,tbl.col12,emaj_tuple,tbl.col13
 mytbl1     |     FROM consolidated tbl
 mytbl1     |     WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |     ORDER BY tbl.col11,tbl.col12, emaj_gid, emaj_tuple DESC;
 myseq1     | WITH seq_begin AS (
 myseq1     |   SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |     WHERE sequ_schema = 'myschema2'
 myseq1     |       AND sequ_name = 'myseq1'
 myseq1     |       AND sequ_time_id = 4029
 myseq1     |   ), seq_end AS (
 myseq1     |   SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |     WHERE sequ_schema = 'myschema2'
 myseq1     |       AND sequ_name = 'myseq1'
 myseq1     |       AND sequ_time_id = 5003
 myseq1     |   ), seq_agg AS (
 myseq1     |   SELECT '<>' FROM seq_begin b, seq_end e
 myseq1     |     WHERE (CASE WHEN b.sequ_is_called THEN b.sequ_last_val ELSE b.sequ_last_val - b.sequ_increment END <>
 myseq1     |            CASE WHEN e.sequ_is_called THEN e.sequ_last_val ELSE e.sequ_last_val - e.sequ_increment END) OR
 myseq1     |            b.sequ_start_val <> e.sequ_start_val OR b.sequ_increment <> e.sequ_increment OR
 myseq1     |            b.sequ_max_val <> e.sequ_max_val OR b.sequ_min_val <> e.sequ_min_val OR
 myseq1     |            b.sequ_cache_val <> e.sequ_cache_val OR b.sequ_is_cycled <> e.sequ_is_cycled
 myseq1     |   )
 myseq1     | SELECT t.* FROM ( SELECT * FROM seq_begin UNION ALL SELECT * FROM seq_end ) AS t, seq_agg
 myseq1     |   ORDER BY emaj_tuple DESC
 myseq1     | ;
(46 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'EMAJ_COLUMNS=ALL,CONSOLIDATION=FULL,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 12 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                                                     sql_text                                                     
------------+------------------------------------------------------------------------------------------------------------------
 mytbl1     | WITH keys AS (
 mytbl1     |   SELECT col11,col12, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid
 mytbl1     |     FROM emaj_myschema2.mytbl1_log
 mytbl1     |     WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |       AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |     GROUP BY col11,col12
 mytbl1     |   ),
 mytbl1     |      consolidated AS (
 mytbl1     |   SELECT tbl.*
 mytbl1     |     FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |          JOIN keys ON (tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |     WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid)
 mytbl1     |        OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid)
 mytbl1     |   ),
 mytbl1     |      unchanged_keys AS (
 mytbl1     |   SELECT r1.col11,r1.col12
 mytbl1     |     FROM consolidated r1
 mytbl1     |          JOIN consolidated r2 ON (r1.col11=r2.col11 AND r1.col12=r2.col12)
 mytbl1     |     WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW'
 mytbl1     |       AND (r1.col13=r2.col13 OR (r1.col13 IS NULL AND r2.col13 IS NULL))
 mytbl1     |   )
 mytbl1     |   SELECT tbl.col11,tbl.col12,emaj_gid,emaj_tuple,tbl.col13,emaj_verb,emaj_changed,emaj_txid,emaj_user
 mytbl1     |     FROM consolidated tbl
 mytbl1     |     WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |     ORDER BY tbl.col11,tbl.col12, emaj_gid, emaj_tuple DESC;
 myseq1     | WITH seq_begin AS (
 myseq1     |   SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |     WHERE sequ_schema = 'myschema2'
 myseq1     |       AND sequ_name = 'myseq1'
 myseq1     |       AND sequ_time_id = 4029
 myseq1     |   ), seq_end AS (
 myseq1     |   SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |     WHERE sequ_schema = 'myschema2'
 myseq1     |       AND sequ_name = 'myseq1'
 myseq1     |       AND sequ_time_id = 5003
 myseq1     |   ), seq_agg AS (
 myseq1     |   SELECT '<>' FROM seq_begin b, seq_end e
 myseq1     |     WHERE (CASE WHEN b.sequ_is_called THEN b.sequ_last_val ELSE b.sequ_last_val - b.sequ_increment END <>
 myseq1     |            CASE WHEN e.sequ_is_called THEN e.sequ_last_val ELSE e.sequ_last_val - e.sequ_increment END) OR
 myseq1     |            b.sequ_start_val <> e.sequ_start_val OR b.sequ_increment <> e.sequ_increment OR
 myseq1     |            b.sequ_max_val <> e.sequ_max_val OR b.sequ_min_val <> e.sequ_min_val OR
 myseq1     |            b.sequ_cache_val <> e.sequ_cache_val OR b.sequ_is_cycled <> e.sequ_is_cycled
 myseq1     |   )
 myseq1     | SELECT t.* FROM ( SELECT * FROM seq_begin UNION ALL SELECT * FROM seq_end ) AS t, seq_agg
 myseq1     |   ORDER BY emaj_tuple DESC
 myseq1     | ;
(46 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'EMAJ_COLUMNS=MIN,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                         sql_text                         
------------+----------------------------------------------------------
 mytbl1     | SELECT tbl.col11,tbl.col12,tbl.col13,emaj_gid,emaj_tuple
 mytbl1     |   FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |   WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |     AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |   ORDER BY emaj_gid, emaj_tuple DESC;
 myseq1     | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 4029
 myseq1     |  UNION ALL 
 myseq1     | SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 5003
 myseq1     |  ORDER BY emaj_tuple DESC
 myseq1     | ;
(16 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'EMAJ_COLUMNS=(emaj_tuple, emaj_gid, emaj_txid),SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                              sql_text                              
------------+--------------------------------------------------------------------
 mytbl1     | SELECT tbl.col11,tbl.col12,tbl.col13,emaj_tuple,emaj_gid,emaj_txid
 mytbl1     |   FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |   WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |     AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |   ORDER BY emaj_gid, emaj_tuple DESC;
 myseq1     | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 4029
 myseq1     |  UNION ALL 
 myseq1     | SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 5003
 myseq1     |  ORDER BY emaj_tuple DESC
 myseq1     | ;
(16 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'ORDER_BY=PK,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                          sql_text                          
------------+------------------------------------------------------------
 mytbl1     | SELECT tbl.*
 mytbl1     |   FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |   WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |     AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |   ORDER BY tbl.col11,tbl.col12, emaj_gid, emaj_tuple DESC;
 myseq1     | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 4029
 myseq1     |  UNION ALL 
 myseq1     | SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 5003
 myseq1     |  ORDER BY emaj_tuple DESC
 myseq1     | ;
(16 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'ORDER_BY = TIME,
																			 Consolidation = partial,
																			 Sql_Format = Pretty', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq in ('mytbl1','myseq1') and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                                 sql_text                                 
------------+--------------------------------------------------------------------------
 mytbl1     | WITH keys AS (
 mytbl1     |   SELECT col11,col12, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid
 mytbl1     |     FROM emaj_myschema2.mytbl1_log
 mytbl1     |     WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |       AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |     GROUP BY col11,col12
 mytbl1     |   ) 
 mytbl1     | SELECT tbl.col11,tbl.col12,emaj_tuple,tbl.col13
 mytbl1     |   FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |        JOIN keys ON (tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |   WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid)
 mytbl1     |      OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid)
 mytbl1     |   ORDER BY emaj_gid, emaj_tuple DESC;
 myseq1     | SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 4029
 myseq1     |  UNION ALL 
 myseq1     | SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
 myseq1     |   WHERE sequ_schema = 'myschema2'
 myseq1     |     AND sequ_name = 'myseq1'
 myseq1     |     AND sequ_time_id = 5003
 myseq1     |  ORDER BY emaj_tuple DESC
 myseq1     | ;
(24 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'COLS_ORDER=LOG_TABLE,CONSOLIDATION=FULL,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 12 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq = 'mytbl1' and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                                                     sql_text                                                     
------------+------------------------------------------------------------------------------------------------------------------
 mytbl1     | WITH keys AS (
 mytbl1     |   SELECT col11,col12, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid
 mytbl1     |     FROM emaj_myschema2.mytbl1_log
 mytbl1     |     WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |       AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |     GROUP BY col11,col12
 mytbl1     |   ),
 mytbl1     |      consolidated AS (
 mytbl1     |   SELECT tbl.*
 mytbl1     |     FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |          JOIN keys ON (tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |     WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid)
 mytbl1     |        OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid)
 mytbl1     |   ),
 mytbl1     |      unchanged_keys AS (
 mytbl1     |   SELECT r1.col11,r1.col12
 mytbl1     |     FROM consolidated r1
 mytbl1     |          JOIN consolidated r2 ON (r1.col11=r2.col11 AND r1.col12=r2.col12)
 mytbl1     |     WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW'
 mytbl1     |       AND (r1.col13=r2.col13 OR (r1.col13 IS NULL AND r2.col13 IS NULL))
 mytbl1     |   )
 mytbl1     |   SELECT tbl.col11,tbl.col12,tbl.col13,emaj_tuple
 mytbl1     |     FROM consolidated tbl
 mytbl1     |     WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col11 = keys.col11 AND tbl.col12 = keys.col12)
 mytbl1     |     ORDER BY tbl.col11,tbl.col12, emaj_gid, emaj_tuple DESC;
(25 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'COLS_ORDER=PK,SQL_FORMAT=PRETTY', NULL);
                    emaj_gen_sql_dump_changes_group                     
------------------------------------------------------------------------
 10 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_tblseq, sql_text FROM emaj_temp_sql WHERE sql_tblseq = 'mytbl1' and sql_line_number >= 1 order by sql_stmt_number, sql_line_number;
 sql_tblseq |                                              sql_text                                               
------------+-----------------------------------------------------------------------------------------------------
 mytbl1     | SELECT tbl.col11,tbl.col12,emaj_gid,emaj_tuple,tbl.col13,emaj_verb,emaj_changed,emaj_txid,emaj_user
 mytbl1     |   FROM emaj_myschema2.mytbl1_log tbl
 mytbl1     |   WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
 mytbl1     |     AND emaj_tuple IN ('OLD','NEW')
 mytbl1     |   ORDER BY emaj_gid, emaj_tuple DESC;
(5 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'SEQUENCES_ONLY', NULL);
                    emaj_gen_sql_dump_changes_group                    
-----------------------------------------------------------------------
 2 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_rel_kind, count(*) FROM emaj_temp_sql WHERE sql_line_number = 1 group by sql_rel_kind ORDER BY sql_rel_kind;
 sql_rel_kind | count 
--------------+-------
 sequence     |     2
(1 row)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'TABLES_ONLY', NULL);
                    emaj_gen_sql_dump_changes_group                    
-----------------------------------------------------------------------
 8 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_rel_kind, count(*) FROM emaj_temp_sql WHERE sql_line_number = 1 group by sql_rel_kind ORDER BY sql_rel_kind;
 sql_rel_kind | count 
--------------+-------
 table        |     8
(1 row)

-- test the tables/sequences array filter
SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, ARRAY[]::TEXT[]);
WARNING:  _check_tblseqs_filter: The table/sequence names array is empty.
                    emaj_gen_sql_dump_changes_group                    
-----------------------------------------------------------------------
 0 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, ARRAY[NULL, '']::TEXT[]);
WARNING:  _check_tblseqs_filter: The table/sequence names array is empty.
                    emaj_gen_sql_dump_changes_group                    
-----------------------------------------------------------------------
 0 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', NULL, ARRAY['myschema2.mytbl1', 'myschema2.myseq1']);
                    emaj_gen_sql_dump_changes_group                    
-----------------------------------------------------------------------
 2 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT sql_rel_kind, count(*) FROM emaj_temp_sql WHERE sql_line_number = 1 group by 1;
 sql_rel_kind | count 
--------------+-------
 table        |     1
 sequence     |     1
(2 rows)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'SEQUENCES_ONLY', ARRAY['myschema2.mytbl1']);
                    emaj_gen_sql_dump_changes_group                    
-----------------------------------------------------------------------
 0 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'TABLES_ONLY', ARRAY['myschema2.myseq1']);
                    emaj_gen_sql_dump_changes_group                    
-----------------------------------------------------------------------
 0 SQL statements are available in the "emaj_temp_sql" temporary table
(1 row)

-- test output as a sql/psql script
SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'SQL_FORMAT=PRETTY', ARRAY['myschema2.mytbl1', 'myschema2.myseq1'],
											:'EMAJTESTTMPDIR' || '/sql_script');
                         emaj_gen_sql_dump_changes_group                         
---------------------------------------------------------------------------------
 2 SQL statements have been written into the "/tmp/emaj_12/misc/sql_script" file
(1 row)

\! cat $EMAJTESTTMPDIR/sql_script
-- Generated SQL for dumping changes in tables group "myGroup2" (subset) between marks "Mark21" and "Mark23" using options: SQL_FORMAT=PRETTY
-- Dump changes for table myschema2.mytbl1 between marks "Mark21" and "Mark23" (10700 changes)
SELECT tbl.*
  FROM emaj_myschema2.mytbl1_log tbl
  WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710
    AND emaj_tuple IN ('OLD','NEW')
  ORDER BY emaj_gid, emaj_tuple DESC;
-- Dump changes for sequence myschema2.myseq1 between marks "Mark21" and "Mark23"
SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence
  WHERE sequ_schema = 'myschema2'
    AND sequ_name = 'myseq1'
    AND sequ_time_id = 4029
 UNION ALL 
SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence
  WHERE sequ_schema = 'myschema2'
    AND sequ_name = 'myseq1'
    AND sequ_time_id = 5003
 ORDER BY emaj_tuple DESC
;
SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23', 'PSQL_COPY_DIR=(' || :'EMAJTESTTMPDIR' || ')', ARRAY['myschema2.mytbl1', 'myschema2.myseq1'],
											:'EMAJTESTTMPDIR' || '/sql_script');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
                         emaj_gen_sql_dump_changes_group                         
---------------------------------------------------------------------------------
 2 SQL statements have been written into the "/tmp/emaj_12/misc/sql_script" file
(1 row)

\! cat $EMAJTESTTMPDIR/sql_script
-- Generated SQL for dumping changes in tables group "myGroup2" (subset) between marks "Mark21" and "Mark23" using options: PSQL_COPY_DIR=(/tmp/emaj_12/misc)
-- Dump changes for table myschema2.mytbl1 between marks "Mark21" and "Mark23" (10700 changes)
\copy (SELECT tbl.* FROM emaj_myschema2.mytbl1_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC) TO '/tmp/emaj_12/misc/myschema2_mytbl1.changes'
-- Dump changes for sequence myschema2.myseq1 between marks "Mark21" and "Mark23"
\copy (SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myseq1' AND sequ_time_id = 4029 UNION ALL SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myseq1' AND sequ_time_id = 5003 ORDER BY emaj_tuple DESC ) TO '/tmp/emaj_12/misc/myschema2_myseq1.changes'
SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup2', 'Mark21', 'Mark23',
											'PSQL_COPY_DIR=(' || :'EMAJTESTTMPDIR' || '), PSQL_COPY_OPTIONS=(format csv, delimiter '';'', header)',
											ARRAY['myschema2.mytbl1', 'myschema2.myseq1'], :'EMAJTESTTMPDIR' || '/sql_script');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
                         emaj_gen_sql_dump_changes_group                         
---------------------------------------------------------------------------------
 2 SQL statements have been written into the "/tmp/emaj_12/misc/sql_script" file
(1 row)

\! cat $EMAJTESTTMPDIR/sql_script
-- Generated SQL for dumping changes in tables group "myGroup2" (subset) between marks "Mark21" and "Mark23" using options: PSQL_COPY_DIR=(/tmp/emaj_12/misc), PSQL_COPY_OPTIONS=(format csv, delimiter ';', header)
-- Dump changes for table myschema2.mytbl1 between marks "Mark21" and "Mark23" (10700 changes)
\copy (SELECT tbl.* FROM emaj_myschema2.mytbl1_log tbl WHERE emaj_gid > 4000000 AND emaj_gid <= 5011710 AND emaj_tuple IN ('OLD','NEW') ORDER BY emaj_gid, emaj_tuple DESC) TO '/tmp/emaj_12/misc/myschema2_mytbl1.changes' (format csv, delimiter ';', header)
-- Dump changes for sequence myschema2.myseq1 between marks "Mark21" and "Mark23"
\copy (SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myseq1' AND sequ_time_id = 4029 UNION ALL SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema2' AND sequ_name = 'myseq1' AND sequ_time_id = 5003 ORDER BY emaj_tuple DESC ) TO '/tmp/emaj_12/misc/myschema2_myseq1.changes' (format csv, delimiter ';', header)
\! rm $EMAJTESTTMPDIR/*
-- Perform logged changes
select emaj.emaj_set_mark_group('myGroup1','Dump_changes_tests_M1');
 emaj_set_mark_group 
---------------------
                   7
(1 row)

-- Build the base content of the test table
UPDATE myschema1.myTbl4 SET col42 = 'Initial row' WHERE col41 = 1 and col43 = 1;
INSERT INTO myschema1.myTbl4
  SELECT i, 'Initial row', 1, 1, 'ABC' FROM generate_series(2,9) i;
select emaj.emaj_set_mark_group('myGroup1','Dump_changes_tests_M2');
 emaj_set_mark_group 
---------------------
                   7
(1 row)

-- Record changes
INSERT INTO myschema1.myTbl4 VALUES (10, 'Inserted row', 1, 1, 'ABC');
DELETE FROM myschema1.myTbl4 WHERE col41 = 1 and col43 = 1;
UPDATE myschema1.myTbl4 SET col43 = 2, col42 = 'PK col changed' WHERE col41 = 2 and col43 = 1;
UPDATE myschema1.myTbl4 SET col42 = 'Non PK col changed' WHERE col41 = 3 and col43 = 1;
UPDATE myschema1.myTbl4 SET col42 = 'Non PK col changed' WHERE col41 = 4 and col43 = 1;
UPDATE myschema1.myTbl4 SET col42 = 'Non PK col changed twice' WHERE col41 = 4 and col43 = 1;
UPDATE myschema1.myTbl4 SET col44 = 1 WHERE col41 = 5 and col43 = 1;  -- actually no change
select emaj.emaj_set_mark_group('myGroup1','Dump_changes_tests_M3');
 emaj_set_mark_group 
---------------------
                   7
(1 row)

INSERT INTO myschema1.myTbl4 VALUES (11, 'Inserted and deleted row', 2, 1, 'ABC');
DELETE FROM myschema1.myTbl4 WHERE col41 = 11 and col43 = 2;
DELETE FROM myschema1.myTbl4 WHERE col41 = 6 and col43 = 1;
INSERT INTO myschema1.myTbl4 VALUES (6, 'Deleted and inserted row', 1, 1, 'ABC');
DELETE FROM myschema1.myTbl4 WHERE col41 = 7 and col43 = 1;
INSERT INTO myschema1.myTbl4 VALUES (7, 'Initial row', 1, 1, 'ABC');    -- totaly unchanged row
INSERT INTO myschema1.myTbl4 VALUES (12, 'Inserted, updated and deleted row', 2, 1, 'ABC');
UPDATE myschema1.myTbl4 SET col44 = 2 WHERE col41 = 12 and col43 = 2;
DELETE FROM myschema1.myTbl4 WHERE col41 = 12 and col43 = 2;
SELECT nextval('myschema1."myTbl3_col31_seq"');
 nextval 
---------
      11
(1 row)

select * from emaj.emaj_set_mark_group('myGroup1','Dump_changes_tests_M4');
 emaj_set_mark_group 
---------------------
                   7
(1 row)

-- Directly dump changes
SELECT emaj.emaj_dump_changes_group('myGroup1', 'Dump_changes_tests_M2', 'Dump_changes_tests_M3',
									'NO_EMPTY_FILES, EMAJ_COLUMNS=MIN',
									NULL, :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 4 files have been created in /tmp/emaj_12/misc
(1 row)

\! ls -1sS $EMAJTESTTMPDIR
total 16
4 _INFO
4 myschema1_mytbl4.changes
4 myschema1_myTbl3_col31_seq.changes
4 myschema1_mytbl2b_col20_seq.changes
\! cat $EMAJTESTTMPDIR/myschema1_mytbl4.changes
10	Inserted row	1	1	ABC       	5400010	NEW
1	Initial row	1	1	ABC       	5400011	OLD
2	Initial row	1	1	ABC       	5400012	OLD
2	PK col changed	2	1	ABC       	5400012	NEW
3	Initial row	1	1	ABC       	5400013	OLD
3	Non PK col changed	1	1	ABC       	5400013	NEW
4	Initial row	1	1	ABC       	5400014	OLD
4	Non PK col changed	1	1	ABC       	5400014	NEW
4	Non PK col changed	1	1	ABC       	5400015	OLD
4	Non PK col changed twice	1	1	ABC       	5400015	NEW
5	Initial row	1	1	ABC       	5400016	OLD
5	Initial row	1	1	ABC       	5400016	NEW
\! cat $EMAJTESTTMPDIR/myschema1_myTbl3_col31_seq.changes
OLD	myschema1	myTbl3_col31_seq	5401	11	1	1	2147483647	1	1	f	f
NEW	myschema1	myTbl3_col31_seq	5402	11	1	1	2147483647	1	1	f	f
\! rm $EMAJTESTTMPDIR/*
SELECT emaj.emaj_dump_changes_group('myGroup1', 'Dump_changes_tests_M3', 'Dump_changes_tests_M4',
									'NO_EMPTY_FILES, COPY_OPTIONS=(format csv, header), EMAJ_COLUMNS=(emaj_verb,emaj_tuple,emaj_gid)',
									NULL, :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 4 files have been created in /tmp/emaj_12/misc
(1 row)

\! ls -1sS $EMAJTESTTMPDIR
total 16
4 _INFO
4 myschema1_mytbl4.changes
4 myschema1_myTbl3_col31_seq.changes
4 myschema1_mytbl2b_col20_seq.changes
\! grep -v '  started at ' $EMAJTESTTMPDIR/_INFO
Dump logged changes for the group "myGroup1" between mark "Dump_changes_tests_M3" and mark "Dump_changes_tests_M4"
  using options "NO_EMPTY_FILES, COPY_OPTIONS=(format csv, header), EMAJ_COLUMNS=(emaj_verb,emaj_tuple,emaj_gid)"
File myschema1_mytbl4.changes covers table "myschema1.mytbl4" from mark "Dump_changes_tests_M3" to mark "Dump_changes_tests_M4"
File myschema1_myTbl3_col31_seq.changes covers sequence "myschema1.myTbl3_col31_seq" from mark "Dump_changes_tests_M3" to mark "Dump_changes_tests_M4"
File myschema1_mytbl2b_col20_seq.changes covers sequence "myschema1.mytbl2b_col20_seq" from mark "Dump_changes_tests_M3" to mark "Dump_changes_tests_M4"
\! cat $EMAJTESTTMPDIR/myschema1_mytbl4.changes
col41,col42,col43,col44,col45,emaj_verb,emaj_tuple,emaj_gid
11,Inserted and deleted row,2,1,ABC       ,INS,NEW,5400017
11,Inserted and deleted row,2,1,ABC       ,DEL,OLD,5400018
6,Initial row,1,1,ABC       ,DEL,OLD,5400019
6,Deleted and inserted row,1,1,ABC       ,INS,NEW,5400020
7,Initial row,1,1,ABC       ,DEL,OLD,5400021
7,Initial row,1,1,ABC       ,INS,NEW,5400022
12,"Inserted, updated and deleted row",2,1,ABC       ,INS,NEW,5400023
12,"Inserted, updated and deleted row",2,1,ABC       ,UPD,OLD,5400024
12,"Inserted, updated and deleted row",2,2,ABC       ,UPD,NEW,5400024
12,"Inserted, updated and deleted row",2,2,ABC       ,DEL,OLD,5400025
\! cat $EMAJTESTTMPDIR/myschema1_myTbl3_col31_seq.changes
emaj_tuple,sequ_schema,sequ_name,sequ_time_id,sequ_last_val,sequ_start_val,sequ_increment,sequ_max_val,sequ_min_val,sequ_cache_val,sequ_is_cycled,sequ_is_called
OLD,myschema1,myTbl3_col31_seq,5402,11,1,1,2147483647,1,1,f,f
NEW,myschema1,myTbl3_col31_seq,5403,11,1,1,2147483647,1,1,f,t
\! rm $EMAJTESTTMPDIR/*
SELECT emaj.emaj_dump_changes_group('myGroup1', 'Dump_changes_tests_M2', 'Dump_changes_tests_M4',
									'CONSOLIDATION=FULL, COPY_OPTIONS=(format csv, delimiter '';'', force_quote *, header)',
                                    NULL, :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 8 files have been created in /tmp/emaj_12/misc
(1 row)

\! cat $EMAJTESTTMPDIR/myschema1_mytbl4.changes
col41;col43;emaj_tuple;col42;col44;col45
"1";"1";"OLD";"Initial row";"1";"ABC       "
"2";"1";"OLD";"Initial row";"1";"ABC       "
"2";"2";"NEW";"PK col changed";"1";"ABC       "
"3";"1";"OLD";"Initial row";"1";"ABC       "
"3";"1";"NEW";"Non PK col changed";"1";"ABC       "
"4";"1";"OLD";"Initial row";"1";"ABC       "
"4";"1";"NEW";"Non PK col changed twice";"1";"ABC       "
"6";"1";"OLD";"Initial row";"1";"ABC       "
"6";"1";"NEW";"Deleted and inserted row";"1";"ABC       "
"10";"1";"NEW";"Inserted row";"1";"ABC       "
\! cat $EMAJTESTTMPDIR/myschema1_myTbl3_col31_seq.changes
emaj_tuple;sequ_schema;sequ_name;sequ_time_id;sequ_last_val;sequ_start_val;sequ_increment;sequ_max_val;sequ_min_val;sequ_cache_val;sequ_is_cycled;sequ_is_called
"OLD";"myschema1";"myTbl3_col31_seq";"5401";"11";"1";"1";"2147483647";"1";"1";"f";"f"
"NEW";"myschema1";"myTbl3_col31_seq";"5403";"11";"1";"1";"2147483647";"1";"1";"f";"t"
\! rm $EMAJTESTTMPDIR/*
SELECT emaj.emaj_dump_changes_group('myGroup1', 'Dump_changes_tests_M2', 'Dump_changes_tests_M4',
									'CONSOLIDATION=PARTIAL',
                                    NULL, :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 8 files have been created in /tmp/emaj_12/misc
(1 row)

\! cat $EMAJTESTTMPDIR/myschema1_mytbl4.changes
1	1	OLD	Initial row	1	ABC       
2	1	OLD	Initial row	1	ABC       
2	2	NEW	PK col changed	1	ABC       
3	1	OLD	Initial row	1	ABC       
3	1	NEW	Non PK col changed	1	ABC       
4	1	OLD	Initial row	1	ABC       
4	1	NEW	Non PK col changed twice	1	ABC       
5	1	OLD	Initial row	1	ABC       
5	1	NEW	Initial row	1	ABC       
6	1	OLD	Initial row	1	ABC       
6	1	NEW	Deleted and inserted row	1	ABC       
7	1	OLD	Initial row	1	ABC       
7	1	NEW	Initial row	1	ABC       
10	1	NEW	Inserted row	1	ABC       
\! cat $EMAJTESTTMPDIR/myschema1_myTbl3_col31_seq.changes
OLD	myschema1	myTbl3_col31_seq	5401	11	1	1	2147483647	1	1	f	f
NEW	myschema1	myTbl3_col31_seq	5403	11	1	1	2147483647	1	1	f	t
\! rm $EMAJTESTTMPDIR/*
-- Dump changes for tables with unusual data types and consolidation.
SELECT emaj.emaj_dump_changes_group('myGroup2', 'Multi-2', 'Multi-3',
									'CONSOLIDATION=PARTIAL',
                                    '{"myschema2.mytbl5", "myschema2.mytbl6"}', :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 3 files have been created in /tmp/emaj_12/misc
(1 row)

\! ls -1sS $EMAJTESTTMPDIR
total 4
4 _INFO
0 myschema2_mytbl5.changes
0 myschema2_mytbl6.changes
\! rm $EMAJTESTTMPDIR/*
SELECT emaj.emaj_dump_changes_group('myGroup2', 'Multi-2', 'Multi-3',
									'CONSOLIDATION=FULL',
                                    '{"myschema2.mytbl5", "myschema2.mytbl6"}', :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 3 files have been created in /tmp/emaj_12/misc
(1 row)

\! ls -1sS $EMAJTESTTMPDIR
total 4
4 _INFO
0 myschema2_mytbl5.changes
0 myschema2_mytbl6.changes
\! rm $EMAJTESTTMPDIR/*
-- Generate SQL statements with the PSQL_COPY_DIR option and execute the generated script
SELECT emaj.emaj_gen_sql_dump_changes_group('myGroup1', 'Dump_changes_tests_M2', 'Dump_changes_tests_M4',
											'PSQL_COPY_DIR=(' || :'EMAJTESTTMPDIR' || '), CONSOLIDATION=FULL',
											NULL, :'EMAJTESTTMPDIR' || '/sql_script');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
                         emaj_gen_sql_dump_changes_group                         
---------------------------------------------------------------------------------
 9 SQL statements have been written into the "/tmp/emaj_12/misc/sql_script" file
(1 row)

\i :EMAJTESTTMPDIR/sql_script
-- Generated SQL for dumping changes in tables group "myGroup1" between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4" using options: PSQL_COPY_DIR=(/tmp/emaj_12/misc), CONSOLIDATION=FULL
SET enable_nestloop = FALSE;
-- Dump changes for table myschema1.myTbl3 between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4" (0 changes)
\copy (WITH keys AS ( SELECT col31, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid FROM emaj_myschema1."myTbl3_log" WHERE emaj_gid > 5400009 AND emaj_gid <= 5400025 AND emaj_tuple IN ('OLD','NEW') GROUP BY col31 ), consolidated AS ( SELECT tbl.* FROM emaj_myschema1."myTbl3_log" tbl JOIN keys ON (tbl.col31 = keys.col31) WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid) OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid) ), unchanged_keys AS ( SELECT r1.col31 FROM consolidated r1 JOIN consolidated r2 ON (r1.col31=r2.col31) WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW' AND (r1.col32=r2.col32 OR (r1.col32 IS NULL AND r2.col32 IS NULL)) AND (r1.col33=r2.col33 OR (r1.col33 IS NULL AND r2.col33 IS NULL)) ) SELECT tbl.col31,emaj_tuple,tbl.col32,tbl.col33 FROM consolidated tbl WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col31 = keys.col31) ORDER BY tbl.col31, emaj_gid, emaj_tuple DESC) TO '/tmp/emaj_12/misc/myschema1_myTbl3.changes'
-- Dump changes for table myschema1.mytbl1 between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4" (0 changes)
\copy (WITH keys AS ( SELECT col11,col12, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid FROM emaj_myschema1.mytbl1_log WHERE emaj_gid > 5400009 AND emaj_gid <= 5400025 AND emaj_tuple IN ('OLD','NEW') GROUP BY col11,col12 ), consolidated AS ( SELECT tbl.* FROM emaj_myschema1.mytbl1_log tbl JOIN keys ON (tbl.col11 = keys.col11 AND tbl.col12 = keys.col12) WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid) OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid) ), unchanged_keys AS ( SELECT r1.col11,r1.col12 FROM consolidated r1 JOIN consolidated r2 ON (r1.col11=r2.col11 AND r1.col12=r2.col12) WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW' AND (r1.col13=r2.col13 OR (r1.col13 IS NULL AND r2.col13 IS NULL)) ) SELECT tbl.col11,tbl.col12,emaj_tuple,tbl.col13 FROM consolidated tbl WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col11 = keys.col11 AND tbl.col12 = keys.col12) ORDER BY tbl.col11,tbl.col12, emaj_gid, emaj_tuple DESC) TO '/tmp/emaj_12/misc/myschema1_mytbl1.changes'
-- Dump changes for table myschema1.mytbl2 between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4" (0 changes)
\copy (WITH keys AS ( SELECT col21, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid FROM emaj_myschema1.mytbl2_log WHERE emaj_gid > 5400009 AND emaj_gid <= 5400025 AND emaj_tuple IN ('OLD','NEW') GROUP BY col21 ), consolidated AS ( SELECT tbl.* FROM emaj_myschema1.mytbl2_log tbl JOIN keys ON (tbl.col21 = keys.col21) WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid) OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid) ), unchanged_keys AS ( SELECT r1.col21 FROM consolidated r1 JOIN consolidated r2 ON (r1.col21=r2.col21) WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW' AND (r1.col22=r2.col22 OR (r1.col22 IS NULL AND r2.col22 IS NULL)) AND (r1.col23=r2.col23 OR (r1.col23 IS NULL AND r2.col23 IS NULL)) ) SELECT tbl.col21,emaj_tuple,tbl.col22,tbl.col23 FROM consolidated tbl WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col21 = keys.col21) ORDER BY tbl.col21, emaj_gid, emaj_tuple DESC) TO '/tmp/emaj_12/misc/myschema1_mytbl2.changes'
-- Dump changes for table myschema1.mytbl2b between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4" (0 changes)
\copy (WITH keys AS ( SELECT col20, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid FROM emaj_myschema1.mytbl2b_log WHERE emaj_gid > 5400009 AND emaj_gid <= 5400025 AND emaj_tuple IN ('OLD','NEW') GROUP BY col20 ), consolidated AS ( SELECT tbl.* FROM emaj_myschema1.mytbl2b_log tbl JOIN keys ON (tbl.col20 = keys.col20) WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid) OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid) ), unchanged_keys AS ( SELECT r1.col20 FROM consolidated r1 JOIN consolidated r2 ON (r1.col20=r2.col20) WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW' AND (r1.col21=r2.col21 OR (r1.col21 IS NULL AND r2.col21 IS NULL)) AND (r1.col22=r2.col22 OR (r1.col22 IS NULL AND r2.col22 IS NULL)) AND (r1.col23=r2.col23 OR (r1.col23 IS NULL AND r2.col23 IS NULL)) AND (r1.col24=r2.col24 OR (r1.col24 IS NULL AND r2.col24 IS NULL)) ) SELECT tbl.col20,emaj_tuple,tbl.col21,tbl.col22,tbl.col23,tbl.col24 FROM consolidated tbl WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col20 = keys.col20) ORDER BY tbl.col20, emaj_gid, emaj_tuple DESC) TO '/tmp/emaj_12/misc/myschema1_mytbl2b.changes'
-- Dump changes for table myschema1.mytbl4 between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4" (16 changes)
\copy (WITH keys AS ( SELECT col41,col43, min(emaj_gid) AS min_gid, max(emaj_gid) AS max_gid FROM emaj_myschema1.mytbl4_log WHERE emaj_gid > 5400009 AND emaj_gid <= 5400025 AND emaj_tuple IN ('OLD','NEW') GROUP BY col41,col43 ), consolidated AS ( SELECT tbl.* FROM emaj_myschema1.mytbl4_log tbl JOIN keys ON (tbl.col41 = keys.col41 AND tbl.col43 = keys.col43) WHERE (tbl.emaj_tuple = 'OLD' AND tbl.emaj_gid = keys.min_gid) OR (tbl.emaj_tuple = 'NEW' AND tbl.emaj_gid = keys.max_gid) ), unchanged_keys AS ( SELECT r1.col41,r1.col43 FROM consolidated r1 JOIN consolidated r2 ON (r1.col41=r2.col41 AND r1.col43=r2.col43) WHERE r1.emaj_tuple = 'OLD' AND r2.emaj_tuple = 'NEW' AND (r1.col42=r2.col42 OR (r1.col42 IS NULL AND r2.col42 IS NULL)) AND (r1.col44=r2.col44 OR (r1.col44 IS NULL AND r2.col44 IS NULL)) AND (r1.col45=r2.col45 OR (r1.col45 IS NULL AND r2.col45 IS NULL)) ) SELECT tbl.col41,tbl.col43,emaj_tuple,tbl.col42,tbl.col44,tbl.col45 FROM consolidated tbl WHERE NOT EXISTS (SELECT 0 FROM unchanged_keys keys WHERE tbl.col41 = keys.col41 AND tbl.col43 = keys.col43) ORDER BY tbl.col41,tbl.col43, emaj_gid, emaj_tuple DESC) TO '/tmp/emaj_12/misc/myschema1_mytbl4.changes'
-- Dump changes for sequence myschema1.myTbl3_col31_seq between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4"
\copy (WITH seq_begin AS ( SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema1' AND sequ_name = 'myTbl3_col31_seq' AND sequ_time_id = 5401 ), seq_end AS ( SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema1' AND sequ_name = 'myTbl3_col31_seq' AND sequ_time_id = 5403 ), seq_agg AS ( SELECT '<>' FROM seq_begin b, seq_end e WHERE (CASE WHEN b.sequ_is_called THEN b.sequ_last_val ELSE b.sequ_last_val - b.sequ_increment END <> CASE WHEN e.sequ_is_called THEN e.sequ_last_val ELSE e.sequ_last_val - e.sequ_increment END) OR b.sequ_start_val <> e.sequ_start_val OR b.sequ_increment <> e.sequ_increment OR b.sequ_max_val <> e.sequ_max_val OR b.sequ_min_val <> e.sequ_min_val OR b.sequ_cache_val <> e.sequ_cache_val OR b.sequ_is_cycled <> e.sequ_is_cycled ) SELECT t.* FROM ( SELECT * FROM seq_begin UNION ALL SELECT * FROM seq_end ) AS t, seq_agg ORDER BY emaj_tuple DESC ) TO '/tmp/emaj_12/misc/myschema1_myTbl3_col31_seq.changes'
-- Dump changes for sequence myschema1.mytbl2b_col20_seq between marks "Dump_changes_tests_M2" and "Dump_changes_tests_M4"
\copy (WITH seq_begin AS ( SELECT 'OLD' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema1' AND sequ_name = 'mytbl2b_col20_seq' AND sequ_time_id = 5401 ), seq_end AS ( SELECT 'NEW' AS emaj_tuple, * FROM emaj.emaj_sequence WHERE sequ_schema = 'myschema1' AND sequ_name = 'mytbl2b_col20_seq' AND sequ_time_id = 5403 ), seq_agg AS ( SELECT '<>' FROM seq_begin b, seq_end e WHERE (CASE WHEN b.sequ_is_called THEN b.sequ_last_val ELSE b.sequ_last_val - b.sequ_increment END <> CASE WHEN e.sequ_is_called THEN e.sequ_last_val ELSE e.sequ_last_val - e.sequ_increment END) OR b.sequ_start_val <> e.sequ_start_val OR b.sequ_increment <> e.sequ_increment OR b.sequ_max_val <> e.sequ_max_val OR b.sequ_min_val <> e.sequ_min_val OR b.sequ_cache_val <> e.sequ_cache_val OR b.sequ_is_cycled <> e.sequ_is_cycled ) SELECT t.* FROM ( SELECT * FROM seq_begin UNION ALL SELECT * FROM seq_end ) AS t, seq_agg ORDER BY emaj_tuple DESC ) TO '/tmp/emaj_12/misc/myschema1_mytbl2b_col20_seq.changes'
RESET enable_nestloop;
\! ls -1sS $EMAJTESTTMPDIR
total 20
12 sql_script
 4 myschema1_mytbl4.changes
 4 myschema1_myTbl3_col31_seq.changes
 0 myschema1_myTbl3.changes
 0 myschema1_mytbl1.changes
 0 myschema1_mytbl2.changes
 0 myschema1_mytbl2b.changes
 0 myschema1_mytbl2b_col20_seq.changes
\! cat $EMAJTESTTMPDIR/myschema1_mytbl4.changes
1	1	OLD	Initial row	1	ABC       
2	1	OLD	Initial row	1	ABC       
2	2	NEW	PK col changed	1	ABC       
3	1	OLD	Initial row	1	ABC       
3	1	NEW	Non PK col changed	1	ABC       
4	1	OLD	Initial row	1	ABC       
4	1	NEW	Non PK col changed twice	1	ABC       
6	1	OLD	Initial row	1	ABC       
6	1	NEW	Deleted and inserted row	1	ABC       
10	1	NEW	Inserted row	1	ABC       
\! cat $EMAJTESTTMPDIR/myschema1_myTbl3_col31_seq.changes
OLD	myschema1	myTbl3_col31_seq	5401	11	1	1	2147483647	1	1	f	f
NEW	myschema1	myTbl3_col31_seq	5403	11	1	1	2147483647	1	1	f	t
\! rm $EMAJTESTTMPDIR/*
select * from emaj.emaj_rollback_group('myGroup1','Dump_changes_tests_M1');
 rlbk_severity |              rlbk_message              
---------------+----------------------------------------
 Notice        | Rollback id = 5400.
 Notice        | 1 / 5 tables effectively processed.
 Notice        | 1 / 2 sequences effectively processed.
(3 rows)

select emaj.emaj_cleanup_rollback_state();
 emaj_cleanup_rollback_state 
-----------------------------
                           1
(1 row)

select emaj.emaj_delete_mark_group('myGroup1','EMAJ_LAST_MARK');
 emaj_delete_mark_group 
------------------------
                      1
(1 row)

-- Test using quotes in schema, table or group names
SELECT emaj.emaj_dump_changes_group('phil''s group#3",', 'Mark4', 'Mark5', 'CONSOLIDATION=NONE', NULL, :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 5 files have been created in /tmp/emaj_12/misc
(1 row)

\! ls -1sS $EMAJTESTTMPDIR
total 12
4 _INFO
4 phil_s_schema_3_myTbl2__col21_seq.changes
4 phil_s_schema_3_phil_s_seq_1.changes
0 phil_s_schema_3_myTbl2_.changes
0 phil_s_schema_3_phil_s_tbl1.changes
\! grep -v '  started at ' $EMAJTESTTMPDIR/_INFO
Dump logged changes for the group "phil's group#3"," between mark "Mark4" and mark "Mark5"
  using options "CONSOLIDATION=NONE"
File phil's_schema"3_myTbl2_.changes covers table "phil's schema"3.myTbl2\\" from mark "Mark4" to mark "Mark5"
File phil's_schema"3_phil's_tbl1.changes covers table "phil's schema"3.phil's tbl1" from mark "Mark4" to mark "Mark5"
File phil's_schema"3_myTbl2__col21_seq.changes covers sequence "phil's schema"3.myTbl2\\_col21_seq" from mark "Mark4" to mark "Mark5"
File phil's_schema"3_phil's"seq_1.changes covers sequence "phil's schema"3.phil's"seq\\1" from mark "Mark4" to mark "Mark5"
\! cat $EMAJTESTTMPDIR/phil_s_schema_3_myTbl2__col21_seq.changes
OLD	phil's schema"3	myTbl2\\_col21_seq	3402	1	1	1	2147483647	1	1	f	f
NEW	phil's schema"3	myTbl2\\_col21_seq	3403	1	1	1	2147483647	1	1	f	f
SELECT emaj.emaj_dump_changes_group('phil''s group#3",', 'Mark4', 'Mark5', 'CONSOLIDATION=PARTIAL', '{"phil''s schema\"3.phil''s tbl1"}', :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 2 files have been created in /tmp/emaj_12/misc
(1 row)

SELECT emaj.emaj_dump_changes_group('phil''s group#3",', 'Mark4', 'Mark5', 'CONSOLIDATION=FULL', '{"phil''s schema\"3.phil''s tbl1"}', :'EMAJTESTTMPDIR');
NOTICE:  table "emaj_temp_sql" does not exist, skipping
            emaj_dump_changes_group             
------------------------------------------------
 2 files have been created in /tmp/emaj_12/misc
(1 row)

\! rm $EMAJTESTTMPDIR/*
-- Checks for emaj_dump_changes_group() and emaj_gen_sql_dump_changes_group()
select hist_id, hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user
  from (select * from emaj.emaj_hist where hist_id >= 5400 order by hist_id) as t;
 hist_id |       hist_function        |   hist_event   |         hist_object          |                                          regexp_replace                                          | hist_user 
---------+----------------------------+----------------+------------------------------+--------------------------------------------------------------------------------------------------+-----------
    5410 | GEN_SQL_DUMP_CHANGES_GROUP | BEGIN          | myGroup2                     | From mark Mark21 to Mark23 towards /tmp/emaj_12/misc/sql_script                                  | postgres
    5411 | GEN_SQL_DUMP_CHANGES_GROUP | END            | myGroup2                     | 2 generated SQL statements                                                                       | postgres
    5412 | GEN_SQL_DUMP_CHANGES_GROUP | BEGIN          | myGroup2                     | From mark Mark21 to Mark23 towards /tmp/emaj_12/misc/sql_script                                  | postgres
    5413 | GEN_SQL_DUMP_CHANGES_GROUP | END            | myGroup2                     | 2 generated SQL statements                                                                       | postgres
    5414 | GEN_SQL_DUMP_CHANGES_GROUP | BEGIN          | myGroup2                     | From mark Mark21 to Mark23 towards /tmp/emaj_12/misc/sql_script                                  | postgres
    5415 | GEN_SQL_DUMP_CHANGES_GROUP | END            | myGroup2                     | 2 generated SQL statements                                                                       | postgres
    5416 | SET_MARK_GROUP             | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5417 | LOCK_GROUP                 | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5418 | LOCK_GROUP                 | END            | myGroup1                     | 5 tables locked, 0 deadlock(s)                                                                   | postgres
    5419 | SET_MARK_GROUP             | TIME STAMP SET | 5400                         |                                                                                                  | postgres
    5420 | SET_MARK_GROUP             | END            | myGroup1                     | Dump_changes_tests_M1                                                                            | postgres
    5421 | SET_MARK_GROUP             | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5422 | LOCK_GROUP                 | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5423 | LOCK_GROUP                 | END            | myGroup1                     | 5 tables locked, 0 deadlock(s)                                                                   | postgres
    5424 | SET_MARK_GROUP             | TIME STAMP SET | 5401                         |                                                                                                  | postgres
    5425 | SET_MARK_GROUP             | END            | myGroup1                     | Dump_changes_tests_M2                                                                            | postgres
    5426 | SET_MARK_GROUP             | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5427 | LOCK_GROUP                 | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5428 | LOCK_GROUP                 | END            | myGroup1                     | 5 tables locked, 0 deadlock(s)                                                                   | postgres
    5429 | SET_MARK_GROUP             | TIME STAMP SET | 5402                         |                                                                                                  | postgres
    5430 | SET_MARK_GROUP             | END            | myGroup1                     | Dump_changes_tests_M3                                                                            | postgres
    5431 | SET_MARK_GROUP             | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5432 | LOCK_GROUP                 | BEGIN          | myGroup1                     |                                                                                                  | postgres
    5433 | LOCK_GROUP                 | END            | myGroup1                     | 5 tables locked, 0 deadlock(s)                                                                   | postgres
    5434 | SET_MARK_GROUP             | TIME STAMP SET | 5403                         |                                                                                                  | postgres
    5435 | SET_MARK_GROUP             | END            | myGroup1                     | Dump_changes_tests_M4                                                                            | postgres
    5436 | DUMP_CHANGES_GROUP         | BEGIN          | myGroup1                     | From mark Dump_changes_tests_M2 to Dump_changes_tests_M3 towards /tmp/emaj_12/misc               | postgres
    5437 | DUMP_CHANGES_GROUP         | END            | myGroup1                     | 4 generated files                                                                                | postgres
    5438 | DUMP_CHANGES_GROUP         | BEGIN          | myGroup1                     | From mark Dump_changes_tests_M3 to Dump_changes_tests_M4 towards /tmp/emaj_12/misc               | postgres
    5439 | DUMP_CHANGES_GROUP         | END            | myGroup1                     | 4 generated files                                                                                | postgres
    5440 | DUMP_CHANGES_GROUP         | BEGIN          | myGroup1                     | From mark Dump_changes_tests_M2 to Dump_changes_tests_M4 towards /tmp/emaj_12/misc               | postgres
    5441 | DUMP_CHANGES_GROUP         | END            | myGroup1                     | 8 generated files                                                                                | postgres
    5442 | DUMP_CHANGES_GROUP         | BEGIN          | myGroup1                     | From mark Dump_changes_tests_M2 to Dump_changes_tests_M4 towards /tmp/emaj_12/misc               | postgres
    5443 | DUMP_CHANGES_GROUP         | END            | myGroup1                     | 8 generated files                                                                                | postgres
    5444 | DUMP_CHANGES_GROUP         | BEGIN          | myGroup2                     | From mark Multi-2 to Multi-3 towards /tmp/emaj_12/misc                                           | postgres
    5445 | DUMP_CHANGES_GROUP         | END            | myGroup2                     | 3 generated files                                                                                | postgres
    5446 | DUMP_CHANGES_GROUP         | BEGIN          | myGroup2                     | From mark Multi-2 to Multi-3 towards /tmp/emaj_12/misc                                           | postgres
    5447 | DUMP_CHANGES_GROUP         | END            | myGroup2                     | 3 generated files                                                                                | postgres
    5448 | GEN_SQL_DUMP_CHANGES_GROUP | BEGIN          | myGroup1                     | From mark Dump_changes_tests_M2 to Dump_changes_tests_M4 towards /tmp/emaj_12/misc/sql_script    | postgres
    5449 | GEN_SQL_DUMP_CHANGES_GROUP | END            | myGroup1                     | 9 generated SQL statements                                                                       | postgres
    5450 | ROLLBACK_GROUP             | BEGIN          | myGroup1                     | Unlogged rollback to mark Dump_changes_tests_M1 (timestamp)                                      | postgres
    5451 | DBLINK_OPEN_CNX            |                | rlbk#1                       | Status = 1                                                                                       | postgres
    5452 | LOCK_GROUP                 | BEGIN          | myGroup1                     | Rollback session #1                                                                              | postgres
    5453 | LOCK_GROUP                 | END            | myGroup1                     | Rollback session #1: 5 tables locked, 0 deadlock(s)                                              | postgres
    5454 | ROLLBACK_GROUP             | TIME STAMP SET | 5404                         |                                                                                                  | postgres
    5455 | ROLLBACK_SEQUENCE          |                | myschema1."myTbl3_col31_seq" | RESTART 11                                                                                       | postgres
    5456 | ROLLBACK_TABLE             | BEGIN          | myschema1.mytbl4             | All log rows where emaj_gid > 5400000 and <= 5400025, in session_replication_role = replica mode | postgres
    5457 | ROLLBACK_TABLE             | END            | myschema1.mytbl4             | 13 rolled back primary keys                                                                      | postgres
    5458 | ROLLBACK_GROUP             | MARK DELETED   | myGroup1                     | mark Dump_changes_tests_M2 is deleted                                                            | postgres
    5459 | ROLLBACK_GROUP             | MARK DELETED   | myGroup1                     | mark Dump_changes_tests_M3 is deleted                                                            | postgres
    5460 | ROLLBACK_GROUP             | MARK DELETED   | myGroup1                     | mark Dump_changes_tests_M4 is deleted                                                            | postgres
    5461 | ROLLBACK_GROUP             | NOTICE         | Rollback id 5400             | Rollback id = 5400.                                                                              | postgres
    5462 | ROLLBACK_GROUP             | NOTICE         | Rollback id 5400             | 1 / 5 tables effectively processed.                                                              | postgres
    5463 | ROLLBACK_GROUP             | NOTICE         | Rollback id 5400             | 1 / 2 sequences effectively processed.                                                           | postgres
    5464 | DBLINK_CLOSE_CNX           |                | rlbk#1                       |                                                                                                  | postgres
    5465 | ROLLBACK_GROUP             | END            | myGroup1                     | Rollback_id 5400                                                                                 | postgres
    5466 | CLEANUP_RLBK_STATE         |                | Rollback id 5400             | set to COMMITTED                                                                                 | postgres
    5467 | DELETE_MARK_GROUP          | BEGIN          | myGroup1                     | EMAJ_LAST_MARK                                                                                   | postgres
    5468 | DELETE_MARK_GROUP          | END            | myGroup1                     | Dump_changes_tests_M1                                                                            | postgres
    5469 | DUMP_CHANGES_GROUP         | BEGIN          | phil's group#3",             | From mark Mark4 to Mark5 towards /tmp/emaj_12/misc                                               | postgres
    5470 | DUMP_CHANGES_GROUP         | END            | phil's group#3",             | 5 generated files                                                                                | postgres
    5471 | DUMP_CHANGES_GROUP         | BEGIN          | phil's group#3",             | From mark Mark4 to Mark5 towards /tmp/emaj_12/misc                                               | postgres
    5472 | DUMP_CHANGES_GROUP         | END            | phil's group#3",             | 2 generated files                                                                                | postgres
    5473 | DUMP_CHANGES_GROUP         | BEGIN          | phil's group#3",             | From mark Mark4 to Mark5 towards /tmp/emaj_12/misc                                               | postgres
    5474 | DUMP_CHANGES_GROUP         | END            | phil's group#3",             | 2 generated files                                                                                | postgres
(65 rows)

-- set sequence restart value
select public.handle_emaj_sequences(5500);
 handle_emaj_sequences 
-----------------------
 
(1 row)

-----------------------------
-- emaj_gen_sql_group() and emaj_gen_sql_groups() tests
-----------------------------
-- group is unknown
select emaj.emaj_gen_sql_group(NULL, NULL, NULL, NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 30 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 41 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_group('unknownGroup', NULL, NULL, NULL, NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 41 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups(NULL, NULL, NULL, NULL);
WARNING:  _check_group_names: No group to process.
 emaj_gen_sql_groups 
---------------------
                   0
(1 row)

select emaj.emaj_gen_sql_groups('{"myGroup1","unknownGroup"}', NULL, NULL, NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 41 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- invalid start mark
select emaj.emaj_gen_sql_group('myGroup2', 'unknownMark', NULL, NULL);
ERROR:  _check_mark_name: The mark "unknownMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_firstMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 19 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups('{"myGroup1","myGroup2"}', 'Mark11', NULL, NULL, NULL);
ERROR:  _check_mark_name: The mark "Mark11" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_firstMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 19 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- invalid end mark
select emaj.emaj_gen_sql_group('myGroup2', 'Multi-1', 'unknownMark', NULL);
ERROR:  _check_mark_name: The mark "unknownMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups('{"myGroup1","myGroup2"}', 'Multi-1', 'Mark11', NULL);
ERROR:  _check_mark_name: The mark "Mark11" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- end mark is prior start mark
-- (mark timestamps are temporarily changed so that regression test can return a stable error message)
begin;
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 12:00:00+00' 
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_group = 'myGroup2' and mark_name = 'Mark21';
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 13:00:00+00'
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_group = 'myGroup2' and mark_name = 'Mark22';
  select emaj.emaj_gen_sql_group('myGroup2', 'Mark22', 'Mark21', NULL);
ERROR:  _check_marks_range: The start mark "Mark22" (2000-01-01 05:00:00-08) has been set after the end mark "Mark21" (2000-01-01 04:00:00-08).
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 43 at RAISE
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
rollback;
begin;
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 12:00:00+00'
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_name = 'Multi-2';
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 13:00:00+00'
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_name = 'Multi-3';
  select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-3', 'Multi-2', NULL);
ERROR:  _check_marks_range: The start mark "Multi-3" (2000-01-01 05:00:00-08) has been set after the end mark "Multi-2" (2000-01-01 04:00:00-08).
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 43 at RAISE
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
rollback;
-- start mark with the same name but that doesn't correspond to the same point in time
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Mark21', 'Multi-2', NULL);
ERROR:  _check_mark_name: The mark "Mark21" does not represent the same point in time for all groups.
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 72 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_firstMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 19 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], NULL, 'Multi-2', NULL, NULL);
ERROR:  _check_marks_range: The first mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 16 at RAISE
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- end mark with the same name but that doesn't correspond to the same point in time
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', 'Mark21', NULL);
ERROR:  _check_mark_name: The mark "Mark21" does not represent the same point in time for all groups.
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 72 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 46 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- empty table/sequence names array
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/myFile', array['']);
WARNING:  _check_tblseqs_filter: The table/sequence names array is empty.
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  0
(1 row)

-- unknown table/sequence names in the tables filter
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', NULL, :'EMAJTESTTMPDIR' || '/myFile', array['foo']);
ERROR:  _check_tblseqs_filter: 1 tables/sequences (foo) did not belong to any of the selected tables groups at start mark time.
CONTEXT:  PL/pgSQL function emaj._check_tblseqs_filter(text[],text[],bigint,bigint,boolean) line 32 at RAISE
SQL statement "SELECT emaj._check_tblseqs_filter(p_tblseqs, p_groupNames, v_firstMarkTimeId, v_lastMarkTimeId, TRUE)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 51 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', NULL, :'EMAJTESTTMPDIR' || '/myFile', array[
     'myschema1.mytbl1','myschema2.myTbl3_col31_seq','phil''s schema3.phil''s tbl1']);
ERROR:  _check_tblseqs_filter: 2 tables/sequences (myschema1.mytbl1, phil's schema3.phil's tbl1) did not belong to any of the selected tables groups at start mark time.
CONTEXT:  PL/pgSQL function emaj._check_tblseqs_filter(text[],text[],bigint,bigint,boolean) line 32 at RAISE
SQL statement "SELECT emaj._check_tblseqs_filter(p_tblseqs, p_groupNames, v_firstMarkTimeId, v_lastMarkTimeId, TRUE)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 51 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', NULL, :'EMAJTESTTMPDIR' || '/myFile', array[
     'myschema1.mytbl1','foo','myschema2.myTbl3_col31_seq','phil''s schema3.phil''s tbl1']);
ERROR:  _check_tblseqs_filter: 2 tables/sequences (foo, phil's schema3.phil's tbl1) did not belong to any of the selected tables groups at start mark time.
CONTEXT:  PL/pgSQL function emaj._check_tblseqs_filter(text[],text[],bigint,bigint,boolean) line 32 at RAISE
SQL statement "SELECT emaj._check_tblseqs_filter(p_tblseqs, p_groupNames, v_firstMarkTimeId, v_lastMarkTimeId, TRUE)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 51 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- the tables group contains a table without pkey
select emaj.emaj_gen_sql_group('phil''s group#3",', 'Mark4', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/Group3');
ERROR:  _gen_sql_groups: 1 tables/sequences (phil's schema"3.myTbl2\) had no pkey at Mark4 mark time.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 67 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
-- invalid location path name
select emaj.emaj_gen_sql_group('myGroup1', 'Mark21', NULL, '/tmp/unknownDirectory/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
ERROR:  could not open file "/tmp/unknownDirectory/myFile" for writing: No such file or directory
HINT:  COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY (SELECT 0) TO '/tmp/unknownDirectory/myFile'"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 82 at EXECUTE
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', NULL, '/tmp/unknownDirectory/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
ERROR:  could not open file "/tmp/unknownDirectory/myFile" for writing: No such file or directory
HINT:  COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY (SELECT 0) TO '/tmp/unknownDirectory/myFile'"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[],text) line 82 at EXECUTE
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- should be ok
-- generated files content is checked later in adm2.sql scenario
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', NULL, :'EMAJTESTTMPDIR' || '/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11712
(1 row)

select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', 'Mark22', :'EMAJTESTTMPDIR' || '/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11601
(1 row)

select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', NULL, :'EMAJTESTTMPDIR' || '/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_groups 
---------------------
               11712
(1 row)

select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-2', 'Multi-3', :'EMAJTESTTMPDIR' || '/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_groups 
---------------------
                 112
(1 row)

select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11712
(1 row)

-- should be ok with no output file supplied
select emaj.emaj_gen_sql_group('myGroup1', 'Mark21', NULL, NULL);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  0
(1 row)

\copy (select * from emaj_sql_script) to '/dev/null'
drop table emaj_temp_script cascade;
NOTICE:  drop cascades to view emaj_sql_script
-- should be ok, with tables and sequences filtering
select stat_group, stat_schema, stat_table, stat_first_mark, stat_first_time_id, stat_last_mark, stat_last_time_id, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark21','EMAJ_LAST_MARK');
 stat_group | stat_schema | stat_table | stat_first_mark | stat_first_time_id | stat_last_mark | stat_last_time_id | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+--------------------+----------------+-------------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |               4029 | Multi-3        |              5004 | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |               4029 | Multi-3        |              5004 | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          |               4029 | Multi-3        |              5004 | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          |               4029 | Multi-3        |              5004 | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          |               4029 | Multi-3        |              5004 | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |               4029 | Multi-3        |              5004 | postgres  | INSERT    |       100
(6 rows)

-- all tables and sequences
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/myFile', array[
     'myschema2.mytbl1','myschema2.mytbl2','myschema2.myTbl3','myschema2.mytbl4',
     'myschema2.mytbl5','myschema2.mytbl6','myschema2.myseq1','myschema2.myTbl3_col31_seq']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11712
(1 row)

-- minus 1 sequence
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/myFile', array[
     'myschema2.mytbl1','myschema2.mytbl2','myschema2.myTbl3','myschema2.mytbl4',
     'myschema2.mytbl5','myschema2.mytbl6','myschema2.myseq1']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11711
(1 row)

-- minus 1 table
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/myFile', array[
     'myschema2.mytbl1','myschema2.mytbl2','myschema2.myTbl3',
     'myschema2.mytbl5','myschema2.mytbl6','myschema2.myseq1']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11611
(1 row)

-- only 1 sequence
select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/myFile', array[
     'myschema2.myTbl3_col31_seq']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  1
(1 row)

-- only 1 table (with a strange name and belonging to a group having another table without pkey)
select emaj.emaj_gen_sql_group('phil''s group#3",', 'Mark4', 'EMAJ_LAST_MARK', :'EMAJTESTTMPDIR' || '/myFile', array[
     'phil''s schema"3.phil''s tbl1']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  0
(1 row)

-- several groups and 1 table of each, with redondancy in the tables array
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', 'Multi-3', :'EMAJTESTTMPDIR' || '/myFile', array[
     'myschema1.mytbl4','myschema2.mytbl4','myschema1.mytbl4','myschema2.mytbl4']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_groups 
---------------------
                 100
(1 row)

\! grep 'only for' $EMAJTESTTMPDIR/myFile
--    only for the following tables/sequences: myschema1.mytbl4,myschema2.mytbl4
-- generate a sql script after a table structure change but on a time frame prior the change
begin;
  select emaj.emaj_set_mark_group('myGroup2','Test sql generation');
 emaj_set_mark_group 
---------------------
                  10
(1 row)

  insert into mySchema2.myTbl2 values(1000,'Text','01/01/2000');
  update mySchema2.myTbl2 set col22 = 'New text' where col21 = 1000;
  delete from mySchema2.myTbl2 where col21 = 1000;
  select emaj.emaj_remove_table('myschema2', 'mytbl2','Before ALTER mytbl2');
 emaj_remove_table 
-------------------
                 1
(1 row)

  alter table mySchema2.myTbl2 rename column col21 to id;
  select emaj.emaj_gen_sql_group('myGroup2', 'Test sql generation', 'Before ALTER mytbl2', :'EMAJTESTTMPDIR' || '/altered_tbl.sql');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  3
(1 row)

rollback;
-- comment transaction commands and mask the timestamp in the initial comment for the need of the current test
\! find $EMAJTESTTMPDIR -name '*.sql' -type f -print0 | xargs -0 sed -i -s 's/^BEGIN/--BEGIN/;s/^COMMIT/--COMMIT/'
\! find $EMAJTESTTMPDIR -name '*.sql' -type f -print0 | xargs -0 sed -i -s 's/at .*$/at [ts]$/'
-- and execute the generated script
\set SQLSCRIPT :EMAJTESTTMPDIR '/altered_tbl.sql'
begin;
  \i :SQLSCRIPT
-- SQL script generated by E-Maj at [ts]$
--    for tables group(s): myGroup2
--    processing logs between mark Test sql generation and mark Before ALTER mytbl2
SET standard_conforming_strings = OFF;
SET escape_string_warning = OFF;
SET datestyle = 'ISO, YMD';
--BEGIN TRANSACTION;
INSERT INTO myschema2.mytbl2 VALUES (1000, 'Text', '2000-01-01');
UPDATE ONLY myschema2.mytbl2 SET col21 = 1000, col22 = 'New text', col23 = '2000-01-01' WHERE col21 = 1000;
DELETE FROM ONLY myschema2.mytbl2 WHERE col21 = 1000;
--COMMIT;
RESET standard_conforming_strings;
RESET escape_string_warning;
RESET datestyle;
rollback;
\! rm $EMAJTESTTMPDIR/*
-- check for emaj_gen_sql_group()
select hist_id, hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user
  from (select * from emaj.emaj_hist where hist_id >= 5500 order by hist_id) as t;
 hist_id | hist_function  | hist_event |    hist_object    |                               regexp_replace                               | hist_user 
---------+----------------+------------+-------------------+----------------------------------------------------------------------------+-----------
    5502 | GEN_SQL_GROUPS | BEGIN      |                   | From mark  to current state                                                | postgres
    5503 | GEN_SQL_GROUPS | END        |                   | 0 generated statements - script not exported                               | postgres
    5514 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to mark EMAJ_LAST_MARK with tables/sequences filtering    | postgres
    5515 | GEN_SQL_GROUP  | END        | myGroup2          | 0 generated statements - script exported into /tmp/emaj_12/misc/myFile     | postgres
    5522 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to current state                                          | postgres
    5523 | GEN_SQL_GROUP  | END        | myGroup2          | 11712 generated statements - script exported into /tmp/emaj_12/misc/myFile | postgres
    5524 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to mark Mark22                                            | postgres
    5525 | GEN_SQL_GROUP  | END        | myGroup2          | 11601 generated statements - script exported into /tmp/emaj_12/misc/myFile | postgres
    5526 | GEN_SQL_GROUPS | BEGIN      | myGroup1,myGroup2 | From mark Multi-1 to current state                                         | postgres
    5527 | GEN_SQL_GROUPS | END        | myGroup1,myGroup2 | 11712 generated statements - script exported into /tmp/emaj_12/misc/myFile | postgres
    5528 | GEN_SQL_GROUPS | BEGIN      | myGroup1,myGroup2 | From mark Multi-2 to mark Multi-3                                          | postgres
    5529 | GEN_SQL_GROUPS | END        | myGroup1,myGroup2 | 112 generated statements - script exported into /tmp/emaj_12/misc/myFile   | postgres
    5530 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to mark EMAJ_LAST_MARK                                    | postgres
    5531 | GEN_SQL_GROUP  | END        | myGroup2          | 11712 generated statements - script exported into /tmp/emaj_12/misc/myFile | postgres
    5532 | GEN_SQL_GROUP  | BEGIN      | myGroup1          | From mark Mark21 to current state                                          | postgres
    5533 | GEN_SQL_GROUP  | END        | myGroup1          | 0 generated statements - script not exported                               | postgres
    5534 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to mark EMAJ_LAST_MARK with tables/sequences filtering    | postgres
    5535 | GEN_SQL_GROUP  | END        | myGroup2          | 11712 generated statements - script exported into /tmp/emaj_12/misc/myFile | postgres
    5536 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to mark EMAJ_LAST_MARK with tables/sequences filtering    | postgres
    5537 | GEN_SQL_GROUP  | END        | myGroup2          | 11711 generated statements - script exported into /tmp/emaj_12/misc/myFile | postgres
    5538 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to mark EMAJ_LAST_MARK with tables/sequences filtering    | postgres
    5539 | GEN_SQL_GROUP  | END        | myGroup2          | 11611 generated statements - script exported into /tmp/emaj_12/misc/myFile | postgres
    5540 | GEN_SQL_GROUP  | BEGIN      | myGroup2          | From mark Mark21 to mark EMAJ_LAST_MARK with tables/sequences filtering    | postgres
    5541 | GEN_SQL_GROUP  | END        | myGroup2          | 1 generated statements - script exported into /tmp/emaj_12/misc/myFile     | postgres
    5542 | GEN_SQL_GROUP  | BEGIN      | phil's group#3",  | From mark Mark4 to mark EMAJ_LAST_MARK with tables/sequences filtering     | postgres
    5543 | GEN_SQL_GROUP  | END        | phil's group#3",  | 0 generated statements - script exported into /tmp/emaj_12/misc/myFile     | postgres
    5544 | GEN_SQL_GROUPS | BEGIN      | myGroup1,myGroup2 | From mark Multi-1 to mark Multi-3 with tables/sequences filtering          | postgres
    5545 | GEN_SQL_GROUPS | END        | myGroup1,myGroup2 | 100 generated statements - script exported into /tmp/emaj_12/misc/myFile   | postgres
(28 rows)

-- set sequence restart value
select public.handle_emaj_sequences(5600);
 handle_emaj_sequences 
-----------------------
 
(1 row)

-----------------------------
-- test a table reclustering (it will use the pkey index as clustered index) and a vacuum full
-----------------------------
cluster emaj_myschema1.mytbl1_log;
vacuum full emaj_myschema1.mytbl1_log;
-----------------------------
-- try forbiden actions on emaj_param
-----------------------------
truncate emaj.emaj_param;
ERROR:  _emaj_param_change_fnct: TRUNCATE the emaj_param table is not allowed. Use DELETE instead.
CONTEXT:  PL/pgSQL function emaj._emaj_param_change_fnct() line 24 at RAISE
-----------------------------
-- emaj_export_parameters_configuration() and emaj_import_parameters_configuration() tests
-----------------------------
-- direct export
--   ok
select json_array_length(emaj.emaj_export_parameters_configuration()->'parameters');
 json_array_length 
-------------------
                 2
(1 row)

-- export in file
--   error
select emaj.emaj_export_parameters_configuration('/tmp/dummy/location/file');
ERROR:  could not open file "/tmp/dummy/location/file" for writing: No such file or directory
HINT:  COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY t TO '/tmp/dummy/location/file'"
PL/pgSQL function emaj.emaj_export_parameters_configuration(text) line 16 at EXECUTE
--   ok
select emaj.emaj_export_parameters_configuration(:'EMAJTESTTMPDIR' || '/orig_param_config');
 emaj_export_parameters_configuration 
--------------------------------------
                                    2
(1 row)

\! wc -l $EMAJTESTTMPDIR/orig_param_config
15 /tmp/emaj_12/misc/orig_param_config
\! grep -v ', at ' $EMAJTESTTMPDIR/orig_param_config
{
  "_help": "Known parameter keys: dblink_user_password, history_retention (default = 1 year), alter_log_table, avg_row_rollback_duration (default = 00:00:00.0001), avg_row_delete_log_duration (default = 00:00:00.00001), avg_fkey_check_duration (default = 00:00:00.00002), fixed_step_rollback_duration (default = 00:00:00.0025), fixed_table_rollback_duration (default = 00:00:00.001) and fixed_dblink_rollback_duration (default = 00:00:00.004).",
  "parameters": [
    {
      "key": "dblink_user_password",
      "value": "user=postgres password=postgres"
    },
    {
      "key": "fixed_step_rollback_duration",
      "value": "@ 0.0025 secs"
    }
  ]
}

-- direct import
--   error
--     no "parameters" array
select emaj.emaj_import_parameters_configuration('{ "dummy_json": null }'::json);
WARNING:  _import_param_conf : The JSON structure does not contain any "parameters" array.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(p_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     unknown attributes
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention", "unknown_attribute_1": null, "unknown_attribute_2": null} ] }'::json);
WARNING:  _import_param_conf : For the parameter "history_retention", the attribute "unknown_attribute_1" is unknown.
WARNING:  _import_param_conf : For the parameter "history_retention", the attribute "unknown_attribute_2" is unknown.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(p_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     missing or null "key" attributes
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "value": "no_key"} ] }'::json);
WARNING:  _import_param_conf : The #1 parameter has no "key" attribute or a "key" set to null.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(p_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": null} ] }'::json);
WARNING:  _import_param_conf : The #1 parameter has no "key" attribute or a "key" set to null.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(p_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     invalid key
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "unknown_param" } ] }'::json);
WARNING:  _import_param_conf : "unknown_param" is not a known E-Maj parameter.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(p_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     duplicate key
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention" }, { "key": "history_retention" } ] }'::json);
WARNING:  _import_param_conf : The JSON structure references several times the parameter "history_retention".
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(p_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--   ok
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention", "value": "1 day"} ] }'::json);
 emaj_import_parameters_configuration 
--------------------------------------
                                    1
(1 row)

--     "null" "value" attribute
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention", "value": null} ] }'::json);
 emaj_import_parameters_configuration 
--------------------------------------
                                    1
(1 row)

--     missing "value" attribute
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention"} ] }'::json);
 emaj_import_parameters_configuration 
--------------------------------------
                                    1
(1 row)

select json_array_length(emaj.emaj_export_parameters_configuration()->'parameters');
 json_array_length 
-------------------
                 2
(1 row)

-- import from file
--   error
select emaj.emaj_import_parameters_configuration('/tmp/dummy/location/file');
ERROR:  could not open file "/tmp/dummy/location/file" for reading: No such file or directory
HINT:  COPY FROM instructs the PostgreSQL server process to read a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY t FROM '/tmp/dummy/location/file'"
PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 20 at EXECUTE
\! echo 'not a json content' >$EMAJTESTTMPDIR/bad_param_config
select emaj.emaj_import_parameters_configuration(:'EMAJTESTTMPDIR' || '/bad_param_config');
ERROR:  emaj_import_parameters_configuration: The file content is not a valid JSON content.
CONTEXT:  PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 30 at RAISE
\! echo '{ "dummy_json": null }' >$EMAJTESTTMPDIR/bad_param_config
select emaj.emaj_import_parameters_configuration(:'EMAJTESTTMPDIR' || '/bad_param_config');
WARNING:  _import_param_conf : The JSON structure does not contain any "parameters" array.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 33 at SQL statement
\! echo '{ "parameters": [ { "key": "bad_key", "value": null} ] }' >$EMAJTESTTMPDIR/bad_param_config
select emaj.emaj_import_parameters_configuration(:'EMAJTESTTMPDIR' || '/bad_param_config');
WARNING:  _import_param_conf : "bad_key" is not a known E-Maj parameter.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 32 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, p_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 33 at SQL statement
--   ok
select emaj.emaj_import_parameters_configuration(:'EMAJTESTTMPDIR' || '/orig_param_config', true);
 emaj_import_parameters_configuration 
--------------------------------------
                                    2
(1 row)

select json_array_length(emaj.emaj_export_parameters_configuration()->'parameters');
 json_array_length 
-------------------
                 2
(1 row)

select emaj.emaj_import_parameters_configuration(:'EMAJTESTTMPDIR' || '/orig_param_config', false);
 emaj_import_parameters_configuration 
--------------------------------------
                                    2
(1 row)

-----------------------------
-- emaj_purge_histories() tests
-----------------------------
select emaj.emaj_purge_histories(NULL);
 emaj_purge_histories 
----------------------
 
(1 row)

select emaj.emaj_purge_histories('0 SECOND');
 emaj_purge_histories 
----------------------
 
(1 row)

-- check for emaj_import_parameters_configuration() and emaj_purge_histories()
select hist_id, hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user
  from (select * from emaj.emaj_hist where hist_id >= 5600 order by hist_id) as t;
 hist_id |   hist_function   |     hist_event     |         hist_object          |                  regexp_replace                   | hist_user 
---------+-------------------+--------------------+------------------------------+---------------------------------------------------+-----------
    5606 | IMPORT_PARAMETERS | BEGIN              |                              |                                                   | postgres
    5607 |                   | INSERTED PARAMETER | history_retention            | @ 1 day                                           | postgres
    5608 | IMPORT_PARAMETERS | END                |                              | 1 parameters imported                             | postgres
    5609 | IMPORT_PARAMETERS | BEGIN              |                              |                                                   | postgres
    5610 |                   | DELETED PARAMETER  | history_retention            |                                                   | postgres
    5611 | IMPORT_PARAMETERS | END                |                              | 1 parameters imported                             | postgres
    5612 | IMPORT_PARAMETERS | BEGIN              |                              |                                                   | postgres
    5613 | IMPORT_PARAMETERS | END                |                              | 1 parameters imported                             | postgres
    5618 | IMPORT_PARAMETERS | BEGIN              |                              | Input file: '/tmp/emaj_12/misc/orig_param_config' | postgres
    5619 |                   | DELETED PARAMETER  | dblink_user_password         |                                                   | postgres
    5620 |                   | DELETED PARAMETER  | fixed_step_rollback_duration |                                                   | postgres
    5621 |                   | INSERTED PARAMETER | dblink_user_password         | <masked data>                                     | postgres
    5622 |                   | INSERTED PARAMETER | fixed_step_rollback_duration | @ 0.0025 secs                                     | postgres
    5623 | IMPORT_PARAMETERS | END                |                              | 2 parameters imported                             | postgres
    5624 | IMPORT_PARAMETERS | BEGIN              |                              | Input file: '/tmp/emaj_12/misc/orig_param_config' | postgres
    5625 |                   | UPDATED PARAMETER  | dblink_user_password         | <masked data>                                     | postgres
    5626 |                   | UPDATED PARAMETER  | fixed_step_rollback_duration | @ 0.0025 secs                                     | postgres
    5627 | IMPORT_PARAMETERS | END                |                              | 2 parameters imported                             | postgres
    5628 | PURGE_HISTORIES   | BEGIN              |                              |                                                   | postgres
    5629 | PURGE_HISTORIES   | END                |                              |                                                   | postgres
    5630 | PURGE_HISTORIES   | BEGIN              |                              | Retention delay @ 0                               | postgres
    5631 | PURGE_HISTORIES   | END                |                              |                                                   | postgres
(22 rows)

-- remove the temp directory
\! rm -R $EMAJTESTTMPDIR
