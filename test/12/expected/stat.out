-- stat.sql : test statistics functions
--   emaj_log_stat_group(), emaj_log_stat_groups()
--   emaj_detailled_log_stat_group() and emaj_detailled_log_stat_groups(),
--   emaj_sequence_stat_group() and emaj_sequence_stat_groups()
--   _get_sequences_last_value()
--
-- set sequence restart value
select public.handle_emaj_sequences(5000);
 handle_emaj_sequences 
-----------------------
 
(1 row)

-----------------------------
-- log updates on myschema2 between 3 mono-group and multi-groups marks
-----------------------------
set search_path=public,myschema2;
-- set a multi-groups mark
select emaj.emaj_set_mark_groups(array['myGroup1','myGroup2'],'Multi-1');
 emaj_set_mark_groups 
----------------------
                   17
(1 row)

-- inserts/updates/deletes in myTbl1, myTbl2 and myTbl2b (via trigger) and increment myseq1
insert into myTbl1 select i, 'ABC', E'\\014'::bytea from generate_series (1,10100) as i;
update myTbl1 set col13=E'\\034'::bytea where col11 <= 500;
delete from myTbl1 where col11 > 10000;
insert into myTbl2 select i, 'DEF', current_date from generate_series (1,900) as i;
select nextval('myschema2.myseq1');
 nextval 
---------
    1000
(1 row)

select nextval('myschema2.myseq1');
 nextval 
---------
    1001
(1 row)

-- set marks
select emaj.emaj_set_mark_group('myGroup2','Mark22');
 emaj_set_mark_group 
---------------------
                  10
(1 row)

select emaj.emaj_set_mark_groups(array['myGroup1','myGroup2'],'Multi-2');
 emaj_set_mark_groups 
----------------------
                   17
(1 row)

-- inserts/updates/deletes in myTbl3 and myTbl4and increment and alter myseq1
insert into "myTbl3" (col33) select generate_series(1000,1039,4)/100;
insert into myTbl4 select i,'FK...',i,1,'ABC' from generate_series (1,100) as i;
select nextval('myschema2.myseq1');
 nextval 
---------
    1002
(1 row)

alter sequence myschema2.myseq1 MAXVALUE 10000;
-- set marks
select emaj.emaj_set_mark_group('myGroup2','Mark23');
 emaj_set_mark_group 
---------------------
                  10
(1 row)

select emaj.emaj_set_mark_groups(array['myGroup1','myGroup2'],'Multi-3');
 emaj_set_mark_groups 
----------------------
                   17
(1 row)

-- reset the sequence alter
alter sequence myschema2.myseq1 MAXVALUE 2000;
-----------------------------
-- emaj_log_stat_group(), emaj_log_stat_groups(), emaj_detailled_log_stat_group() and emaj_detailled_log_stat_groups() test
-----------------------------
-- group is unknown
select * from emaj.emaj_log_stat_group(NULL,NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 30 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 19 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_groups(array['unknownGroup'],NULL,NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 19 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_groups(text[],text,text) line 7 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_group(NULL,NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 30 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 29 at PERFORM
PL/pgSQL function emaj.emaj_detailed_log_stat_group(text,text,text) line 8 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_groups(array['unknownGroup'],NULL,NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 29 at PERFORM
PL/pgSQL function emaj.emaj_detailed_log_stat_groups(text[],text,text) line 8 at RETURN QUERY
-- invalid marks
select * from emaj.emaj_log_stat_group('myGroup2',NULL,NULL);
ERROR:  _check_marks_range: The first mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 16 at RAISE
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark) checked"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 23 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_group('myGroup2','',NULL);
ERROR:  _check_marks_range: The first mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 16 at RAISE
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark) checked"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 23 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_group('myGroup2','dummyStartMark',NULL);
ERROR:  _check_mark_name: The mark "dummyStartMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_firstMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 19 at SQL statement
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark) checked"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 23 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_group('myGroup2','Mark22','dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark) checked"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 23 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_group('myGroup2','dummyStartMark',NULL);
ERROR:  _check_mark_name: The mark "dummyStartMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_firstMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 19 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 32 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_group(text,text,text) line 8 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_group('myGroup2','Mark22','dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 32 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_group(text,text,text) line 8 at RETURN QUERY
select * from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],NULL,NULL);
ERROR:  _check_marks_range: The first mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 16 at RAISE
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark) checked"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 23 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_groups(text[],text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the groups "myGroup1, myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 63 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark) checked"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 23 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_groups(text[],text,text) line 7 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],NULL,NULL);
ERROR:  _check_marks_range: The first mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 16 at RAISE
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 32 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_groups(text[],text,text) line 8 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the groups "myGroup1, myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 63 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT *
                                                                                                                                              FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 32 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_groups(text[],text,text) line 8 at RETURN QUERY
-- start mark > end mark
-- original test (uncomment for unit test)
--  select * from emaj.emaj_log_stat_group('myGroup2','Mark23','Mark22');
--  select * from emaj.emaj_detailed_log_stat_group('myGroup2','Mark23','Mark22');
-- just check the error is trapped, because the error message contains timestamps
create function test_log(v_groupName TEXT, v_firstMark TEXT, v_lastMark TEXT) returns void language plpgsql as 
$$
begin
  begin
    perform count(*) from emaj.emaj_log_stat_group(v_groupName,v_firstMark,v_lastMark);
    return;
  exception when raise_exception then
    raise notice 'Error trapped on emaj_log_stat_group() call';
  end;
  begin
    perform count(*) from emaj.emaj_detailed_log_stat_group(v_groupName,v_firstMark,v_lastMark);
    return;
  exception when raise_exception then
    raise notice 'Error trapped on emaj_detailed_log_stat_group() call';
  end;
  return;
end;
$$;
select test_log('myGroup2','Mark23','Mark22');
NOTICE:  Error trapped on emaj_log_stat_group() call
NOTICE:  Error trapped on emaj_detailed_log_stat_group() call
 test_log 
----------
 
(1 row)

select test_log('myGroup2','EMAJ_LAST_MARK','Mark22');
NOTICE:  Error trapped on emaj_log_stat_group() call
NOTICE:  Error trapped on emaj_detailed_log_stat_group() call
 test_log 
----------
 
(1 row)

drop function test_log(text,text,text);
-- should be ok
select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_group('myGroup2','Mark21',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                |     10700
 myGroup2   | myschema2   | mytbl2     | Mark21          |                |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                |       100
 myGroup2   | myschema2   | mytbl5     | Mark21          |                |         0
 myGroup2   | myschema2   | mytbl6     | Mark21          |                |         0
 myGroup2   | myschema2   | mytbl7     | Mark21          |                |         0
 myGroup2   | myschema2   | mytbl8     | Mark21          |                |         0
(8 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_group('myGroup2','Mark21','EMAJ_LAST_MARK')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          | Multi-3        |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        |     10700
 myGroup2   | myschema2   | mytbl2     | Mark21          | Multi-3        |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          | Multi-3        |       100
 myGroup2   | myschema2   | mytbl5     | Mark21          | Multi-3        |         0
 myGroup2   | myschema2   | mytbl6     | Mark21          | Multi-3        |         0
 myGroup2   | myschema2   | mytbl7     | Mark21          | Multi-3        |         0
 myGroup2   | myschema2   | mytbl8     | Mark21          | Multi-3        |         0
(8 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_group('myGroup2','Mark22','Mark22')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl1     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl2     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl4     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl5     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl6     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl7     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl8     | Mark22          | Mark22         |         0
(8 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_group('myGroup2','Mark22','Mark23')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark22          | Mark23         |        10
 myGroup2   | myschema2   | mytbl1     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl2     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl4     | Mark22          | Mark23         |       100
 myGroup2   | myschema2   | mytbl5     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl6     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl7     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl8     | Mark22          | Mark23         |         0
(8 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_group('myGroup2','EMAJ_LAST_MARK','')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl1     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl2     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl4     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl5     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl6     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl7     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl8     | Multi-3         |                |         0
(8 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup1   | myschema1   | myTbl3     | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl1     | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl2     | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl2b    | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl4     | Multi-1         |                |         0
 myGroup2   | myschema2   | myTbl3     | Multi-1         |                |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                |     10700
 myGroup2   | myschema2   | mytbl2     | Multi-1         |                |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         |                |       100
 myGroup2   | myschema2   | mytbl5     | Multi-1         |                |         0
 myGroup2   | myschema2   | mytbl6     | Multi-1         |                |         0
 myGroup2   | myschema2   | mytbl7     | Multi-1         |                |         0
 myGroup2   | myschema2   | mytbl8     | Multi-1         |                |         0
(13 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','Multi-3')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup1   | myschema1   | myTbl3     | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl1     | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl2     | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl2b    | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl4     | Multi-1         | Multi-3        |         0
 myGroup2   | myschema2   | myTbl3     | Multi-1         | Multi-3        |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        |     10700
 myGroup2   | myschema2   | mytbl2     | Multi-1         | Multi-3        |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         | Multi-3        |       100
 myGroup2   | myschema2   | mytbl5     | Multi-1         | Multi-3        |         0
 myGroup2   | myschema2   | mytbl6     | Multi-1         | Multi-3        |         0
 myGroup2   | myschema2   | mytbl7     | Multi-1         | Multi-3        |         0
 myGroup2   | myschema2   | mytbl8     | Multi-1         | Multi-3        |         0
(13 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark21',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          |                | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark21','EMAJ_LAST_MARK')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          | Multi-3        | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          | Multi-3        | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          | Multi-3        | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark22','Mark22')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
(0 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark22','Mark23')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark22          | Mark23         | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl4     | Mark22          | Mark23         | postgres  | INSERT    |       100
(2 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','EMAJ_LAST_MARK','')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
(0 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Multi-1         |                | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Multi-1         |                | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         |                | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','Multi-3')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Multi-1         | Multi-3        | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Multi-1         | Multi-3        | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         | Multi-3        | postgres  | INSERT    |       100
(6 rows)

-- empty group
select * from emaj.emaj_log_stat_group('emptyGroup','SM2',NULL);
 stat_group | stat_schema | stat_table | stat_first_mark | stat_first_mark_datetime | stat_last_mark | stat_last_mark_datetime | stat_rows 
------------+-------------+------------+-----------------+--------------------------+----------------+-------------------------+-----------
(0 rows)

select * from emaj.emaj_detailed_log_stat_group('emptyGroup','SM2',NULL);
 stat_group | stat_schema | stat_table | stat_first_mark | stat_first_mark_datetime | stat_last_mark | stat_last_mark_datetime | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+--------------------------+----------------+-------------------------+-----------+-----------+-----------
(0 rows)

-- warning on marks range too wide to be contained by a single log session
select emaj.emaj_stop_group('myGroup4', 'myGroup4_stop');
 emaj_stop_group 
-----------------
               8
(1 row)

select emaj.emaj_start_group('myGroup4', 'myGroup4_restart', false);
 emaj_start_group 
------------------
                8
(1 row)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_group('myGroup4','myGroup4_start','myGroup4_restart')
  order by stat_group, stat_schema, stat_table;
WARNING:  Between marks "myGroup4_start" and "myGroup4_restart", the tables group "myGroup4" has not been always in logging state. Some data changes may not have been recorded.
 stat_group | stat_schema | stat_table | stat_first_mark |  stat_last_mark  | stat_rows 
------------+-------------+------------+-----------------+------------------+-----------
 myGroup4   | myschema4   | mypartp1a  | myGroup4_start  | myGroup4_restart |         0
 myGroup4   | myschema4   | mypartp1b  | myGroup4_start  | myGroup4_restart |         0
 myGroup4   | myschema4   | mypartp2   | myGroup4_start  | myGroup4_restart |         0
 myGroup4   | myschema4   | mytblc1    | myGroup4_start  | myGroup4_restart |         0
 myGroup4   | myschema4   | mytblc2    | myGroup4_start  | myGroup4_restart |         0
 myGroup4   | myschema4   | mytblm     | myGroup4_start  | myGroup4_restart |         0
 myGroup4   | myschema4   | mytblr1    | Assign mytblr1  | myGroup4_restart |         0
 myGroup4   | myschema4   | mytblr2    | myGroup4_start  | myGroup4_restart |         0
(8 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_group('myGroup4','myGroup4_start','')
  order by stat_group, stat_schema, stat_table;
WARNING:  Since mark "myGroup4_start", the tables group "myGroup4" has not been always in logging state. Some data changes may not have been recorded.
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup4   | myschema4   | mypartp1a  | myGroup4_start  |                |         0
 myGroup4   | myschema4   | mypartp1b  | myGroup4_start  |                |         0
 myGroup4   | myschema4   | mypartp2   | myGroup4_start  |                |         0
 myGroup4   | myschema4   | mytblc1    | myGroup4_start  |                |         0
 myGroup4   | myschema4   | mytblc2    | myGroup4_start  |                |         0
 myGroup4   | myschema4   | mytblm     | myGroup4_start  |                |         0
 myGroup4   | myschema4   | mytblr1    | Assign mytblr1  |                |         0
 myGroup4   | myschema4   | mytblr2    | myGroup4_start  |                |         0
(8 rows)

-----------------------------
-- emaj_sequence_stat_group(), emaj_sequence_stat_groups() test
-----------------------------
-- group is unknown
SELECT * from emaj.emaj_sequence_stat_group('dummy', NULL, NULL);
ERROR:  _check_group_names: The group "dummy" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,boolean,boolean,boolean,boolean) line 42 at RAISE
SQL statement "SELECT emaj._check_group_names(p_groupNames := p_groupNames, p_mayBeNull := p_multiGroup, p_lockGroups := FALSE)"
PL/pgSQL function emaj._sequence_stat_groups(text[],boolean,text,text) line 20 at SQL statement
PL/pgSQL function emaj.emaj_sequence_stat_group(text,text,text) line 7 at RETURN QUERY
-- start mark is null or unknown
SELECT * from emaj.emaj_sequence_stat_group('myGroup1', NULL, NULL);
ERROR:  _check_marks_range: The first mark cannot be NULL or empty.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 16 at RAISE
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark,
                                     p_checkLogSession := FALSE) AS checked"
PL/pgSQL function emaj._sequence_stat_groups(text[],boolean,text,text) line 24 at SQL statement
PL/pgSQL function emaj.emaj_sequence_stat_group(text,text,text) line 7 at RETURN QUERY
SELECT * from emaj.emaj_sequence_stat_groups(ARRAY['myGroup1'], 'dummy', NULL);
ERROR:  _check_mark_name: The mark "dummy" does not exist for the group "myGroup1".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_firstMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 19 at SQL statement
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark,
                                     p_checkLogSession := FALSE) AS checked"
PL/pgSQL function emaj._sequence_stat_groups(text[],boolean,text,text) line 24 at SQL statement
PL/pgSQL function emaj.emaj_sequence_stat_groups(text[],text,text) line 7 at RETURN QUERY
-- end mark is unknown
SELECT * from emaj.emaj_sequence_stat_group('myGroup1', 'EMAJ_LAST_MARK', 'dummy');
ERROR:  _check_mark_name: The mark "dummy" does not exist for the group "myGroup1".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,boolean) line 61 at RAISE
SQL statement "SELECT emaj._check_mark_name(p_groupNames := p_groupNames, p_mark := p_lastMark)"
PL/pgSQL function emaj._check_marks_range(text[],text,text,boolean,boolean) line 33 at SQL statement
SQL statement "SELECT checked.p_firstMark, checked.p_lastMark, p_firstMarkTimeId, p_lastMarkTimeId, p_firstMarkTs, p_lastMarkTs
                                                                                                               FROM emaj._check_marks_range(p_groupNames := p_groupNames, p_firstMark := p_firstMark, p_lastMark := p_lastMark,
                                     p_checkLogSession := FALSE) AS checked"
PL/pgSQL function emaj._sequence_stat_groups(text[],boolean,text,text) line 24 at SQL statement
PL/pgSQL function emaj.emaj_sequence_stat_group(text,text,text) line 7 at RETURN QUERY
-- end mark is prior start mark (not tested as this is the same piece of code as for emaj_log_stat_group()
-- empty group
select * from emaj.emaj_sequence_stat_group('emptyGroup','SM2',NULL);
 stat_group | stat_schema | stat_sequence | stat_first_mark | stat_first_mark_datetime | stat_last_mark | stat_last_mark_datetime | stat_increments | stat_has_structure_changed 
------------+-------------+---------------+-----------------+--------------------------+----------------+-------------------------+-----------------+----------------------------
(0 rows)

-- should be ok
select stat_group, stat_schema, stat_sequence, stat_first_mark, stat_last_mark, stat_increments, stat_has_structure_changed
  from emaj.emaj_sequence_stat_group('myGroup2','Mark21',NULL)
  order by stat_group, stat_schema, stat_sequence;
 stat_group | stat_schema |  stat_sequence   | stat_first_mark | stat_last_mark | stat_increments | stat_has_structure_changed 
------------+-------------+------------------+-----------------+----------------+-----------------+----------------------------
 myGroup2   | myschema2   | myTbl3_col31_seq | Mark21          |                |              10 | f
 myGroup2   | myschema2   | myseq1           | Mark21          |                |               3 | f
(2 rows)

select stat_group, stat_schema, stat_sequence, stat_first_mark, stat_last_mark, stat_increments, stat_has_structure_changed
  from emaj.emaj_sequence_stat_group('myGroup2','Mark21','EMAJ_LAST_MARK')
  order by stat_group, stat_schema, stat_sequence;
 stat_group | stat_schema |  stat_sequence   | stat_first_mark | stat_last_mark | stat_increments | stat_has_structure_changed 
------------+-------------+------------------+-----------------+----------------+-----------------+----------------------------
 myGroup2   | myschema2   | myTbl3_col31_seq | Mark21          | Multi-3        |              10 | f
 myGroup2   | myschema2   | myseq1           | Mark21          | Multi-3        |               3 | t
(2 rows)

select stat_group, stat_schema, stat_sequence, stat_first_mark, stat_last_mark, stat_increments, stat_has_structure_changed
  from emaj.emaj_sequence_stat_group('myGroup2','Mark22','Mark22')
  order by stat_group, stat_schema, stat_sequence;
 stat_group | stat_schema |  stat_sequence   | stat_first_mark | stat_last_mark | stat_increments | stat_has_structure_changed 
------------+-------------+------------------+-----------------+----------------+-----------------+----------------------------
 myGroup2   | myschema2   | myTbl3_col31_seq | Mark22          | Mark22         |               0 | f
 myGroup2   | myschema2   | myseq1           | Mark22          | Mark22         |               0 | f
(2 rows)

select stat_group, stat_schema, stat_sequence, stat_first_mark, stat_last_mark, stat_increments, stat_has_structure_changed
  from emaj.emaj_sequence_stat_group('myGroup2','Mark22','Mark23')
  order by stat_group, stat_schema, stat_sequence;
 stat_group | stat_schema |  stat_sequence   | stat_first_mark | stat_last_mark | stat_increments | stat_has_structure_changed 
------------+-------------+------------------+-----------------+----------------+-----------------+----------------------------
 myGroup2   | myschema2   | myTbl3_col31_seq | Mark22          | Mark23         |              10 | f
 myGroup2   | myschema2   | myseq1           | Mark22          | Mark23         |               1 | t
(2 rows)

select stat_group, stat_schema, stat_sequence, stat_first_mark, stat_last_mark, stat_increments, stat_has_structure_changed
  from emaj.emaj_sequence_stat_group('myGroup2','EMAJ_LAST_MARK','')
  order by stat_group, stat_schema, stat_sequence;
 stat_group | stat_schema |  stat_sequence   | stat_first_mark | stat_last_mark | stat_increments | stat_has_structure_changed 
------------+-------------+------------------+-----------------+----------------+-----------------+----------------------------
 myGroup2   | myschema2   | myTbl3_col31_seq | Multi-3         |                |               0 | f
 myGroup2   | myschema2   | myseq1           | Multi-3         |                |               0 | t
(2 rows)

select stat_group, stat_schema, stat_sequence, stat_first_mark, stat_last_mark, stat_increments, stat_has_structure_changed
  from emaj.emaj_sequence_stat_groups(array['myGroup1','myGroup2'],'Multi-1',NULL)
  order by stat_group, stat_schema, stat_sequence;
 stat_group | stat_schema |   stat_sequence   | stat_first_mark | stat_last_mark | stat_increments | stat_has_structure_changed 
------------+-------------+-------------------+-----------------+----------------+-----------------+----------------------------
 myGroup1   | myschema1   | myTbl3_col31_seq  | Multi-1         |                |               0 | f
 myGroup1   | myschema1   | mytbl2b_col20_seq | Multi-1         |                |               0 | f
 myGroup2   | myschema2   | myTbl3_col31_seq  | Multi-1         |                |              10 | f
 myGroup2   | myschema2   | myseq1            | Multi-1         |                |               3 | f
(4 rows)

select stat_group, stat_schema, stat_sequence, stat_first_mark, stat_last_mark, stat_increments, stat_has_structure_changed
  from emaj.emaj_sequence_stat_groups(array['myGroup1','myGroup2'],'Multi-1','Multi-3')
  order by stat_group, stat_schema, stat_sequence;
 stat_group | stat_schema |   stat_sequence   | stat_first_mark | stat_last_mark | stat_increments | stat_has_structure_changed 
------------+-------------+-------------------+-----------------+----------------+-----------------+----------------------------
 myGroup1   | myschema1   | myTbl3_col31_seq  | Multi-1         | Multi-3        |               0 | f
 myGroup1   | myschema1   | mytbl2b_col20_seq | Multi-1         | Multi-3        |               0 | f
 myGroup2   | myschema2   | myTbl3_col31_seq  | Multi-1         | Multi-3        |              10 | f
 myGroup2   | myschema2   | myseq1            | Multi-1         | Multi-3        |               3 | t
(4 rows)

-----------------------------
-- _get_sequences_last_value() test
-----------------------------
-- get all groups, tables and sequences
select * from emaj._get_sequences_last_value(null, null, null, null, null, null)
  where p_key <> 'current_epoch' order by 1;
               p_key               | p_value 
-----------------------------------+---------
 emaj.emaj_global_seq              | 5011710
 emaj.emaj_time_stamp_time_id_seq  | 5006
 myschema1.myTbl3                  | 30
 myschema1.myTbl3_col31_seq        | 10
 myschema1.mytbl1                  | 64
 myschema1.mytbl2                  | 14
 myschema1.mytbl2b                 | 15
 myschema1.mytbl2b_col20_seq       | 2
 myschema1.mytbl4                  | 4
 myschema2.myTbl3                  | 10
 myschema2.myTbl3_col31_seq        | 10
 myschema2.myseq1                  | 1002
 myschema2.mytbl1                  | 10700
 myschema2.mytbl2                  | 900
 myschema2.mytbl4                  | 100
 myschema2.mytbl5                  | 0
 myschema2.mytbl6                  | 0
 myschema2.mytbl7                  | 0
 myschema2.mytbl8                  | 0
 myschema4.mypartp1a               | 1
 myschema4.mypartp1b               | 3
 myschema4.mypartp2                | 8
 myschema4.mytblc1                 | 3
 myschema4.mytblc2                 | 3
 myschema4.mytblm                  | 3
 myschema4.mytblr1                 | 0
 myschema4.mytblr2                 | 2
 phil's schema"3.myTbl2\           | 0
 phil's schema"3.myTbl2\_col21_seq | 0
 phil's schema"3.phil's tbl1       | 0
 phil's schema"3.phil's"seq\1      | 999
(31 rows)

-- filter on groups
select p_key from emaj._get_sequences_last_value('Group', null, null, null, null, null) order by 1;
              p_key               
----------------------------------
 current_epoch
 emaj.emaj_global_seq
 emaj.emaj_time_stamp_time_id_seq
 myschema1.myTbl3
 myschema1.myTbl3_col31_seq
 myschema1.mytbl1
 myschema1.mytbl2
 myschema1.mytbl2b
 myschema1.mytbl2b_col20_seq
 myschema1.mytbl4
 myschema2.myTbl3
 myschema2.myTbl3_col31_seq
 myschema2.myseq1
 myschema2.mytbl1
 myschema2.mytbl2
 myschema2.mytbl4
 myschema2.mytbl5
 myschema2.mytbl6
 myschema2.mytbl7
 myschema2.mytbl8
 myschema4.mypartp1a
 myschema4.mypartp1b
 myschema4.mypartp2
 myschema4.mytblc1
 myschema4.mytblc2
 myschema4.mytblm
 myschema4.mytblr1
 myschema4.mytblr2
(28 rows)

select p_key from emaj._get_sequences_last_value(null, 'Group', null, null, null, null) order by 1;
               p_key               
-----------------------------------
 current_epoch
 emaj.emaj_global_seq
 emaj.emaj_time_stamp_time_id_seq
 phil's schema"3.myTbl2\
 phil's schema"3.myTbl2\_col21_seq
 phil's schema"3.phil's tbl1
 phil's schema"3.phil's"seq\1
(7 rows)

-- filter on tables and sequences
select p_key from emaj._get_sequences_last_value(null, null, 'tbl2|tbl4', '2b', 'col', 'myschema2') order by 1;
               p_key               
-----------------------------------
 current_epoch
 emaj.emaj_global_seq
 emaj.emaj_time_stamp_time_id_seq
 myschema1.myTbl3_col31_seq
 myschema1.mytbl2
 myschema1.mytbl2b_col20_seq
 myschema1.mytbl4
 myschema2.mytbl2
 myschema2.mytbl4
 phil's schema"3.myTbl2\_col21_seq
(10 rows)

-- check for statistics functions family
select hist_id, hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user
  from (select * from emaj.emaj_hist where hist_id >= 5000 order by hist_id) as t;
 hist_id |  hist_function  |   hist_event   |    hist_object    |         regexp_replace          | hist_user 
---------+-----------------+----------------+-------------------+---------------------------------+-----------
    5000 | SET_MARK_GROUPS | BEGIN          | myGroup1,myGroup2 | Multi-1                         | postgres
    5001 | LOCK_GROUPS     | BEGIN          | myGroup1,myGroup2 |                                 | postgres
    5002 | LOCK_GROUPS     | END            | myGroup1,myGroup2 | 13 tables locked, 0 deadlock(s) | postgres
    5003 | SET_MARK_GROUPS | TIME STAMP SET | 5000              |                                 | postgres
    5004 | SET_MARK_GROUPS | END            | myGroup1,myGroup2 | Multi-1                         | postgres
    5005 | SET_MARK_GROUP  | BEGIN          | myGroup2          |                                 | postgres
    5006 | LOCK_GROUP      | BEGIN          | myGroup2          |                                 | postgres
    5007 | LOCK_GROUP      | END            | myGroup2          | 8 tables locked, 0 deadlock(s)  | postgres
    5008 | SET_MARK_GROUP  | TIME STAMP SET | 5001              |                                 | postgres
    5009 | SET_MARK_GROUP  | END            | myGroup2          | Mark22                          | postgres
    5010 | SET_MARK_GROUPS | BEGIN          | myGroup1,myGroup2 | Multi-2                         | postgres
    5011 | LOCK_GROUPS     | BEGIN          | myGroup1,myGroup2 |                                 | postgres
    5012 | LOCK_GROUPS     | END            | myGroup1,myGroup2 | 13 tables locked, 0 deadlock(s) | postgres
    5013 | SET_MARK_GROUPS | TIME STAMP SET | 5002              |                                 | postgres
    5014 | SET_MARK_GROUPS | END            | myGroup1,myGroup2 | Multi-2                         | postgres
    5015 | SET_MARK_GROUP  | BEGIN          | myGroup2          |                                 | postgres
    5016 | LOCK_GROUP      | BEGIN          | myGroup2          |                                 | postgres
    5017 | LOCK_GROUP      | END            | myGroup2          | 8 tables locked, 0 deadlock(s)  | postgres
    5018 | SET_MARK_GROUP  | TIME STAMP SET | 5003              |                                 | postgres
    5019 | SET_MARK_GROUP  | END            | myGroup2          | Mark23                          | postgres
    5020 | SET_MARK_GROUPS | BEGIN          | myGroup1,myGroup2 | Multi-3                         | postgres
    5021 | LOCK_GROUPS     | BEGIN          | myGroup1,myGroup2 |                                 | postgres
    5022 | LOCK_GROUPS     | END            | myGroup1,myGroup2 | 13 tables locked, 0 deadlock(s) | postgres
    5023 | SET_MARK_GROUPS | TIME STAMP SET | 5004              |                                 | postgres
    5024 | SET_MARK_GROUPS | END            | myGroup1,myGroup2 | Multi-3                         | postgres
    5025 | STOP_GROUP      | BEGIN          | myGroup4          |                                 | postgres
    5026 | STOP_GROUP      | TIME STAMP SET | 5005              |                                 | postgres
    5027 | LOCK_GROUP      | BEGIN          | myGroup4          |                                 | postgres
    5028 | LOCK_GROUP      | END            | myGroup4          | 8 tables locked, 0 deadlock(s)  | postgres
    5029 | SET_MARK_GROUP  | BEGIN          | myGroup4          | myGroup4_stop                   | postgres
    5030 | SET_MARK_GROUP  | END            | myGroup4          | myGroup4_stop                   | postgres
    5031 | STOP_GROUP      | END            | myGroup4          | 8 tables/sequences processed    | postgres
    5032 | START_GROUP     | BEGIN          | myGroup4          | Without log reset               | postgres
    5033 | START_GROUP     | TIME STAMP SET | 5006              |                                 | postgres
    5034 | LOCK_GROUP      | BEGIN          | myGroup4          |                                 | postgres
    5035 | LOCK_GROUP      | END            | myGroup4          | 8 tables locked, 0 deadlock(s)  | postgres
    5036 | SET_MARK_GROUP  | BEGIN          | myGroup4          | myGroup4_restart                | postgres
    5037 | SET_MARK_GROUP  | END            | myGroup4          | myGroup4_restart                | postgres
    5038 | START_GROUP     | END            | myGroup4          | 8 tables/sequences processed    | postgres
(39 rows)

